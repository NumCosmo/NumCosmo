
c_tests = [
    {
        'name': 'test_ncm_cfg',
        'sources': ['test_ncm_cfg.c'],
    },
    {
        'name': 'test_ncm_sparam',
        'sources': ['test_ncm_sparam.c'],
    },
    {
        'name': 'test_ncm_diff',
        'sources': ['test_ncm_diff.c'],
    },
    {
        'name': 'test_ncm_ode',
        'sources': ['test_ncm_ode.c'],
    },
    {
        'name': 'test_ncm_fftlog',
        'sources': ['test_ncm_fftlog.c'],
    },
    {
        'name': 'test_ncm_vector',
        'sources': ['test_ncm_vector.c'],
    },
    {
        'name': 'test_ncm_matrix',
        'sources': ['test_ncm_matrix.c'],
    },
    {
        'name': 'test_ncm_stats_vec',
        'sources': ['test_ncm_stats_vec.c'],
    },
    {
        'name': 'test_ncm_stats_dist1d_epdf',
        'sources': ['test_ncm_stats_dist1d_epdf.c'],
    },
    {
        'name': 'test_ncm_stats_dist',
        'sources': ['test_ncm_stats_dist.c'],
        'timeout': 0,
    },
    {
        'name': 'test_ncm_stats_dist_kernel',
        'sources': ['test_ncm_stats_dist_kernel.c'],
    },
    {
        'name': 'test_ncm_spline',
        'sources': ['test_ncm_spline.c'],
    },
    {
        'name': 'test_ncm_spline2d',
        'sources': ['test_ncm_spline2d.c'],
    },
    {
        'name': 'test_ncm_integral1d',
        'sources': ['test_ncm_integral1d.c'],
    },
    {
        'name': 'test_ncm_integral_nd',
        'sources': ['test_ncm_integral_nd.c'],
    },
    {
        'name': 'test_ncm_sf_sbessel',
        'sources': ['test_ncm_sf_sbessel.c'],
    },
    {
        'name': 'test_ncm_mpsf_0F1',
        'sources': ['test_ncm_mpsf_0F1.c'],
    },
    {
        'name': 'test_ncm_mpsf_trig_int',
        'sources': ['test_ncm_mpsf_trig_int.c'],
    },
    {
        'name': 'test_ncm_model',
        'sources': ['test_ncm_model.c', 'ncm_model_test.c', 'ncm_model_test.h'],
    },
    {
        'name': 'test_ncm_model_ctrl',
        'sources': ['test_ncm_model_ctrl.c'],
    },
    {
        'name': 'test_ncm_mset',
        'sources': ['test_ncm_mset.c'],
    },
    {
        'name': 'test_ncm_mset_catalog',
        'sources': ['test_ncm_mset_catalog.c'],
    },
    {
        'name': 'test_ncm_obj_array',
        'sources': ['test_ncm_obj_array.c'],
    },
    {
        'name': 'test_ncm_serialize',
        'sources': ['test_ncm_serialize.c'],
    },
    {
        'name': 'test_ncm_data_gauss_cov',
        'sources': [
            'test_ncm_data_gauss_cov.c',
            'ncm_data_gauss_cov_test.c',
            'ncm_data_gauss_cov_test.h',
        ],
    },
    {
        'name': 'test_ncm_fit',
        'sources': ['test_ncm_fit.c'],
        'timeout': 0,
    },
    {
        'name': 'test_ncm_fit_state',
        'sources': ['test_ncm_fit_state.c'],
    },
    {
        'name': 'test_ncm_fit_esmcmc',
        'sources': ['test_ncm_fit_esmcmc.c'],
        'timeout': 0,
    },
    {
        'name': 'test_ncm_func_eval',
        'sources': ['test_ncm_func_eval.c'],
    },
    {
        'name': 'test_ncm_sf_spherical_harmonics',
        'sources': ['test_ncm_sf_spherical_harmonics.c'],
    },
    {
        'name': 'test_ncm_sphere_map',
        'sources': ['test_ncm_sphere_map.c'],
        'timeout': 0,
    },
    {
        'name': 'test_nc_halo_bias',
        'sources': ['test_nc_halo_bias.c'],
    },
    {
        'name': 'test_nc_hicosmo_de',
        'sources': ['test_nc_hicosmo_de.c'],
    },
    {
        'name': 'test_nc_window',
        'sources': ['test_nc_window.c'],
    },
    {
        'name': 'test_nc_transfer_func',
        'sources': ['test_nc_transfer_func.c'],
    },
    {
        'name': 'test_nc_galaxy_acf',
        'sources': ['test_nc_galaxy_acf.c'],
    },
    {
        'name': 'test_nc_recomb',
        'sources': ['test_nc_recomb.c'],
    },
    {
        'name': 'test_nc_cbe',
        'sources': ['test_nc_cbe.c'],
        'timeout': 0,
    },
    {
        'name': 'test_nc_hiqg_1d',
        'sources': ['test_nc_hiqg_1d.c'],
    },
    {
        'name': 'test_nc_data_bao_rdv',
        'sources': ['test_nc_data_bao_rdv.c'],
    },
    {
        'name': 'test_nc_data_bao_dvdv',
        'sources': ['test_nc_data_bao_dvdv.c'],
    },
    {
        'name': 'test_nc_data_cluster_ncount',
        'sources': ['test_nc_data_cluster_ncount.c'],
    },
    {
        'name': 'test_nc_cluster_pseudo_counts',
        'sources': ['test_nc_cluster_pseudo_counts.c'],
    },
    {
        'name': 'test_nc_cluster_abundance',
        'sources': ['test_nc_cluster_abundance.c'],
    },
    {
        'name': 'test_nc_halo_density_profile',
        'sources': ['test_nc_halo_density_profile.c'],
    },
    {
        'name': 'test_nc_wl_surface_mass_density',
        'sources': ['test_nc_wl_surface_mass_density.c'],
    },
    {
        'name': 'test_nc_powspec',
        'sources': ['test_nc_powspec.c'],
        'timeout': 0,
    },
    {
        'name': 'test_nc_distance',
        'sources': ['test_nc_distance.c'],
    },
    {
        'name': 'test_nc_galaxy_wl_ellipticity_kde',
        'sources': ['test_nc_galaxy_wl_ellipticity_kde.c'],
        'timeout': 0,
    },
    {
        'name': 'test_nc_galaxy_wl_ellipticity_binned',
        'sources': ['test_nc_galaxy_wl_ellipticity_binned.c'],
    },
]
tests_c_args = ['-DG_LOG_DOMAIN="NUMCOSMO"', '-DHAVE_CONFIG_H']

foreach c_test : c_tests
    executable_test = executable(
        c_test['name'],
        c_test['sources'],
        c_args: tests_c_args,
        dependencies: [libnumcosmo_dep],
    )
    if c_test.has_key('timeout')
        timeout = c_test['timeout']
    else
        timeout = 60
    endif
    test(c_test['name'], executable_test, timeout: timeout)
endforeach
