# Makefile.in generated by automake 1.16.1 from Makefile.am.
# tests/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# aminclude_static.am generated automatically by Autoconf
# from AX_AM_MACROS_STATIC on Fri Mar  4 17:03:56 -03 2022

# GLIB - Library of useful C routines




VPATH = ../../tests
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/numcosmo
pkgincludedir = $(includedir)/numcosmo
pkglibdir = $(libdir)/numcosmo
pkglibexecdir = $(libexecdir)/numcosmo
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
TESTS = $(am__EXEEXT_1)
installed_test_PROGRAMS = $(am__EXEEXT_4)
noinst_PROGRAMS = $(am__EXEEXT_5)
check_PROGRAMS = $(am__EXEEXT_3)
#am__append_1 = $(all_test_ltlibs)
#am__append_2 = $(all_test_programs)
#am__append_3 = $(all_test_scripts)
#am__append_4 = $(all_test_data)
am__append_5 = $(all_test_ltlibs)
am__append_6 = $(all_test_programs)
am__append_7 = $(all_test_scripts)
am__append_8 = $(all_test_data)
#am__append_9 = $(test_programs) $(installed_test_programs) \
#                          $(test_extra_programs) $(installed_test_extra_programs)

#am__append_10 = $(test_scripts) \
#	$(installed_test_scripts) \
#	$(test_extra_scripts) \
#	$(installed_test_extra_scripts) \
#	$(dist_test_scripts) \
#	$(dist_test_extra_scripts) \
#	$(dist_installed_test_scripts) \
#	$(dist_installed_test_extra_scripts)
#am__append_11 = $(test_data) \
#	$(installed_test_data) \
#	$(dist_test_data) \
#	$(dist_installed_test_data)
#am__append_12 = $(test_ltlibraries) $(installed_test_ltlibraries)
#am__append_13 = $(installed_test_meta_DATA)
subdir = tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_ac_append_to_file.m4 \
	$(top_srcdir)/m4/ax_ac_print_to_file.m4 \
	$(top_srcdir)/m4/ax_add_am_macro_static.m4 \
	$(top_srcdir)/m4/ax_am_macros_static.m4 \
	$(top_srcdir)/m4/ax_append_compile_flags.m4 \
	$(top_srcdir)/m4/ax_append_flag.m4 \
	$(top_srcdir)/m4/ax_cc_maxopt.m4 \
	$(top_srcdir)/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/m4/ax_check_gnu_make.m4 \
	$(top_srcdir)/m4/ax_code_coverage.m4 \
	$(top_srcdir)/m4/ax_compiler_vendor.m4 \
	$(top_srcdir)/m4/ax_compiler_version.m4 \
	$(top_srcdir)/m4/ax_count_cpus.m4 \
	$(top_srcdir)/m4/ax_file_escapes.m4 \
	$(top_srcdir)/m4/ax_gcc_archflag.m4 \
	$(top_srcdir)/m4/ax_gfortran_version.m4 \
	$(top_srcdir)/m4/ax_prog_cc_mpi.m4 \
	$(top_srcdir)/m4/ax_prog_fc_mpi.m4 \
	$(top_srcdir)/m4/ax_require_defined.m4 \
	$(top_srcdir)/m4/glibtests.m4 $(top_srcdir)/m4/gtk-doc.m4 \
	$(top_srcdir)/m4/introspection.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/m4_ax_blas.m4 \
	$(top_srcdir)/m4/m4_ax_check_link_flag.m4 \
	$(top_srcdir)/m4/m4_ax_ext.m4 \
	$(top_srcdir)/m4/m4_ax_gcc_x86_avx_xgetbv.m4 \
	$(top_srcdir)/m4/m4_ax_gcc_x86_cpuid.m4 \
	$(top_srcdir)/m4/m4_ax_lapack.m4 \
	$(top_srcdir)/m4/m4_ax_lib_hdf5.m4 $(top_srcdir)/m4/pkg.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 = test_ncm_vector$(EXEEXT) test_ncm_matrix$(EXEEXT) \
	test_ncm_stats_vec$(EXEEXT) \
	test_ncm_stats_dist1d_epdf$(EXEEXT) \
	test_ncm_stats_dist$(EXEEXT) \
	test_ncm_stats_dist_kernel$(EXEEXT) test_ncm_spline$(EXEEXT) \
	test_ncm_spline2d$(EXEEXT) test_ncm_integral1d$(EXEEXT) \
	test_ncm_sf_sbessel$(EXEEXT) test_ncm_func_eval$(EXEEXT) \
	test_ncm_sparam$(EXEEXT) test_ncm_diff$(EXEEXT) \
	test_ncm_ode$(EXEEXT) test_ncm_fftlog$(EXEEXT) \
	test_ncm_model$(EXEEXT) test_ncm_model_ctrl$(EXEEXT) \
	test_ncm_serialize$(EXEEXT) test_ncm_mset$(EXEEXT) \
	test_ncm_mset_catalog$(EXEEXT) test_ncm_obj_array$(EXEEXT) \
	test_ncm_data_gauss_cov$(EXEEXT) test_ncm_fit$(EXEEXT) \
	test_ncm_fit_esmcmc$(EXEEXT) \
	test_ncm_sf_spherical_harmonics$(EXEEXT) \
	test_ncm_sphere_map$(EXEEXT) test_nc_hiqg_1d$(EXEEXT) \
	test_nc_hicosmo_de$(EXEEXT) test_nc_window$(EXEEXT) \
	test_nc_transfer_func$(EXEEXT) test_nc_galaxy_acf$(EXEEXT) \
	test_nc_recomb$(EXEEXT) test_nc_cbe$(EXEEXT) \
	test_nc_data_bao_rdv$(EXEEXT) test_nc_data_bao_dvdv$(EXEEXT) \
	test_nc_cluster_pseudo_counts$(EXEEXT) \
	test_nc_halo_density_profile$(EXEEXT) \
	test_nc_wl_surface_mass_density$(EXEEXT) \
	test_nc_distance$(EXEEXT)
am__EXEEXT_2 = $(am__EXEEXT_1)
am__EXEEXT_3 = $(am__EXEEXT_2)
#am__EXEEXT_4 = $(am__EXEEXT_1)
am__installdirs = "$(DESTDIR)$(installed_testdir)" \
	"$(DESTDIR)$(installed_testdir)" \
	"$(DESTDIR)$(installed_testdir)" \
	"$(DESTDIR)$(installed_test_metadir)" \
	"$(DESTDIR)$(installed_testdir)"
#am__EXEEXT_5 = $(am__EXEEXT_2)
PROGRAMS = $(installed_test_PROGRAMS) $(noinst_PROGRAMS)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
LTLIBRARIES = $(installed_test_LTLIBRARIES) $(noinst_LTLIBRARIES)
am_test_nc_cbe_OBJECTS = test_nc_cbe.$(OBJEXT)
test_nc_cbe_OBJECTS = $(am_test_nc_cbe_OBJECTS)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
test_nc_cbe_DEPENDENCIES = $(top_builddir)/numcosmo/libnumcosmo.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
am_test_nc_cluster_pseudo_counts_OBJECTS =  \
	test_nc_cluster_pseudo_counts.$(OBJEXT)
test_nc_cluster_pseudo_counts_OBJECTS =  \
	$(am_test_nc_cluster_pseudo_counts_OBJECTS)
test_nc_cluster_pseudo_counts_DEPENDENCIES =  \
	$(top_builddir)/numcosmo/libnumcosmo.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_test_nc_data_bao_dvdv_OBJECTS = test_nc_data_bao_dvdv.$(OBJEXT)
test_nc_data_bao_dvdv_OBJECTS = $(am_test_nc_data_bao_dvdv_OBJECTS)
test_nc_data_bao_dvdv_DEPENDENCIES =  \
	$(top_builddir)/numcosmo/libnumcosmo.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_test_nc_data_bao_rdv_OBJECTS = test_nc_data_bao_rdv.$(OBJEXT)
test_nc_data_bao_rdv_OBJECTS = $(am_test_nc_data_bao_rdv_OBJECTS)
test_nc_data_bao_rdv_DEPENDENCIES =  \
	$(top_builddir)/numcosmo/libnumcosmo.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_test_nc_distance_OBJECTS = test_nc_distance.$(OBJEXT)
test_nc_distance_OBJECTS = $(am_test_nc_distance_OBJECTS)
test_nc_distance_DEPENDENCIES =  \
	$(top_builddir)/numcosmo/libnumcosmo.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_test_nc_galaxy_acf_OBJECTS = test_nc_galaxy_acf.$(OBJEXT)
test_nc_galaxy_acf_OBJECTS = $(am_test_nc_galaxy_acf_OBJECTS)
test_nc_galaxy_acf_DEPENDENCIES =  \
	$(top_builddir)/numcosmo/libnumcosmo.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_test_nc_halo_density_profile_OBJECTS =  \
	test_nc_halo_density_profile.$(OBJEXT)
test_nc_halo_density_profile_OBJECTS =  \
	$(am_test_nc_halo_density_profile_OBJECTS)
test_nc_halo_density_profile_DEPENDENCIES =  \
	$(top_builddir)/numcosmo/libnumcosmo.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_test_nc_hicosmo_de_OBJECTS = test_nc_hicosmo_de.$(OBJEXT)
test_nc_hicosmo_de_OBJECTS = $(am_test_nc_hicosmo_de_OBJECTS)
test_nc_hicosmo_de_DEPENDENCIES =  \
	$(top_builddir)/numcosmo/libnumcosmo.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_test_nc_hiqg_1d_OBJECTS = test_nc_hiqg_1d.$(OBJEXT)
test_nc_hiqg_1d_OBJECTS = $(am_test_nc_hiqg_1d_OBJECTS)
test_nc_hiqg_1d_DEPENDENCIES =  \
	$(top_builddir)/numcosmo/libnumcosmo.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_test_nc_recomb_OBJECTS = test_nc_recomb.$(OBJEXT)
test_nc_recomb_OBJECTS = $(am_test_nc_recomb_OBJECTS)
test_nc_recomb_DEPENDENCIES = $(top_builddir)/numcosmo/libnumcosmo.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_test_nc_transfer_func_OBJECTS = test_nc_transfer_func.$(OBJEXT)
test_nc_transfer_func_OBJECTS = $(am_test_nc_transfer_func_OBJECTS)
test_nc_transfer_func_DEPENDENCIES =  \
	$(top_builddir)/numcosmo/libnumcosmo.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_test_nc_window_OBJECTS = test_nc_window.$(OBJEXT)
test_nc_window_OBJECTS = $(am_test_nc_window_OBJECTS)
test_nc_window_DEPENDENCIES = $(top_builddir)/numcosmo/libnumcosmo.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_test_nc_wl_surface_mass_density_OBJECTS =  \
	test_nc_wl_surface_mass_density.$(OBJEXT)
test_nc_wl_surface_mass_density_OBJECTS =  \
	$(am_test_nc_wl_surface_mass_density_OBJECTS)
test_nc_wl_surface_mass_density_DEPENDENCIES =  \
	$(top_builddir)/numcosmo/libnumcosmo.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_test_ncm_data_gauss_cov_OBJECTS =  \
	test_ncm_data_gauss_cov.$(OBJEXT) \
	ncm_data_gauss_cov_test.$(OBJEXT)
test_ncm_data_gauss_cov_OBJECTS =  \
	$(am_test_ncm_data_gauss_cov_OBJECTS)
test_ncm_data_gauss_cov_DEPENDENCIES =  \
	$(top_builddir)/numcosmo/libnumcosmo.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_test_ncm_diff_OBJECTS = test_ncm_diff.$(OBJEXT)
test_ncm_diff_OBJECTS = $(am_test_ncm_diff_OBJECTS)
test_ncm_diff_DEPENDENCIES = $(top_builddir)/numcosmo/libnumcosmo.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_test_ncm_fftlog_OBJECTS = test_ncm_fftlog.$(OBJEXT)
test_ncm_fftlog_OBJECTS = $(am_test_ncm_fftlog_OBJECTS)
test_ncm_fftlog_DEPENDENCIES =  \
	$(top_builddir)/numcosmo/libnumcosmo.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_test_ncm_fit_OBJECTS = test_ncm_fit.$(OBJEXT)
test_ncm_fit_OBJECTS = $(am_test_ncm_fit_OBJECTS)
test_ncm_fit_DEPENDENCIES = $(top_builddir)/numcosmo/libnumcosmo.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_test_ncm_fit_esmcmc_OBJECTS = test_ncm_fit_esmcmc.$(OBJEXT)
test_ncm_fit_esmcmc_OBJECTS = $(am_test_ncm_fit_esmcmc_OBJECTS)
test_ncm_fit_esmcmc_DEPENDENCIES =  \
	$(top_builddir)/numcosmo/libnumcosmo.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_test_ncm_func_eval_OBJECTS = test_ncm_func_eval.$(OBJEXT)
test_ncm_func_eval_OBJECTS = $(am_test_ncm_func_eval_OBJECTS)
test_ncm_func_eval_DEPENDENCIES =  \
	$(top_builddir)/numcosmo/libnumcosmo.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_test_ncm_integral1d_OBJECTS = test_ncm_integral1d.$(OBJEXT)
test_ncm_integral1d_OBJECTS = $(am_test_ncm_integral1d_OBJECTS)
test_ncm_integral1d_DEPENDENCIES =  \
	$(top_builddir)/numcosmo/libnumcosmo.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_test_ncm_matrix_OBJECTS = test_ncm_matrix.$(OBJEXT)
test_ncm_matrix_OBJECTS = $(am_test_ncm_matrix_OBJECTS)
test_ncm_matrix_DEPENDENCIES =  \
	$(top_builddir)/numcosmo/libnumcosmo.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_test_ncm_model_OBJECTS = test_ncm_model.$(OBJEXT) \
	ncm_model_test.$(OBJEXT)
test_ncm_model_OBJECTS = $(am_test_ncm_model_OBJECTS)
test_ncm_model_DEPENDENCIES = $(top_builddir)/numcosmo/libnumcosmo.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_test_ncm_model_ctrl_OBJECTS = test_ncm_model_ctrl.$(OBJEXT)
test_ncm_model_ctrl_OBJECTS = $(am_test_ncm_model_ctrl_OBJECTS)
test_ncm_model_ctrl_DEPENDENCIES =  \
	$(top_builddir)/numcosmo/libnumcosmo.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_test_ncm_mset_OBJECTS = test_ncm_mset.$(OBJEXT)
test_ncm_mset_OBJECTS = $(am_test_ncm_mset_OBJECTS)
test_ncm_mset_DEPENDENCIES = $(top_builddir)/numcosmo/libnumcosmo.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_test_ncm_mset_catalog_OBJECTS = test_ncm_mset_catalog.$(OBJEXT)
test_ncm_mset_catalog_OBJECTS = $(am_test_ncm_mset_catalog_OBJECTS)
test_ncm_mset_catalog_DEPENDENCIES =  \
	$(top_builddir)/numcosmo/libnumcosmo.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_test_ncm_obj_array_OBJECTS = test_ncm_obj_array.$(OBJEXT)
test_ncm_obj_array_OBJECTS = $(am_test_ncm_obj_array_OBJECTS)
test_ncm_obj_array_DEPENDENCIES =  \
	$(top_builddir)/numcosmo/libnumcosmo.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_test_ncm_ode_OBJECTS = test_ncm_ode.$(OBJEXT)
test_ncm_ode_OBJECTS = $(am_test_ncm_ode_OBJECTS)
test_ncm_ode_DEPENDENCIES = $(top_builddir)/numcosmo/libnumcosmo.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_test_ncm_serialize_OBJECTS = test_ncm_serialize.$(OBJEXT)
test_ncm_serialize_OBJECTS = $(am_test_ncm_serialize_OBJECTS)
test_ncm_serialize_DEPENDENCIES =  \
	$(top_builddir)/numcosmo/libnumcosmo.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_test_ncm_sf_sbessel_OBJECTS = test_ncm_sf_sbessel.$(OBJEXT)
test_ncm_sf_sbessel_OBJECTS = $(am_test_ncm_sf_sbessel_OBJECTS)
test_ncm_sf_sbessel_DEPENDENCIES =  \
	$(top_builddir)/numcosmo/libnumcosmo.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_test_ncm_sf_spherical_harmonics_OBJECTS =  \
	test_ncm_sf_spherical_harmonics.$(OBJEXT)
test_ncm_sf_spherical_harmonics_OBJECTS =  \
	$(am_test_ncm_sf_spherical_harmonics_OBJECTS)
test_ncm_sf_spherical_harmonics_DEPENDENCIES =  \
	$(top_builddir)/numcosmo/libnumcosmo.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_test_ncm_sparam_OBJECTS = test_ncm_sparam.$(OBJEXT)
test_ncm_sparam_OBJECTS = $(am_test_ncm_sparam_OBJECTS)
test_ncm_sparam_DEPENDENCIES =  \
	$(top_builddir)/numcosmo/libnumcosmo.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_test_ncm_sphere_map_OBJECTS = test_ncm_sphere_map.$(OBJEXT)
test_ncm_sphere_map_OBJECTS = $(am_test_ncm_sphere_map_OBJECTS)
test_ncm_sphere_map_DEPENDENCIES =  \
	$(top_builddir)/numcosmo/libnumcosmo.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_test_ncm_spline_OBJECTS = test_ncm_spline.$(OBJEXT)
test_ncm_spline_OBJECTS = $(am_test_ncm_spline_OBJECTS)
test_ncm_spline_DEPENDENCIES =  \
	$(top_builddir)/numcosmo/libnumcosmo.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_test_ncm_spline2d_OBJECTS = test_ncm_spline2d.$(OBJEXT)
test_ncm_spline2d_OBJECTS = $(am_test_ncm_spline2d_OBJECTS)
test_ncm_spline2d_DEPENDENCIES =  \
	$(top_builddir)/numcosmo/libnumcosmo.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_test_ncm_stats_dist_OBJECTS = test_ncm_stats_dist.$(OBJEXT)
test_ncm_stats_dist_OBJECTS = $(am_test_ncm_stats_dist_OBJECTS)
test_ncm_stats_dist_DEPENDENCIES =  \
	$(top_builddir)/numcosmo/libnumcosmo.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_test_ncm_stats_dist1d_epdf_OBJECTS =  \
	test_ncm_stats_dist1d_epdf.$(OBJEXT)
test_ncm_stats_dist1d_epdf_OBJECTS =  \
	$(am_test_ncm_stats_dist1d_epdf_OBJECTS)
test_ncm_stats_dist1d_epdf_DEPENDENCIES =  \
	$(top_builddir)/numcosmo/libnumcosmo.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_test_ncm_stats_dist_kernel_OBJECTS =  \
	test_ncm_stats_dist_kernel.$(OBJEXT)
test_ncm_stats_dist_kernel_OBJECTS =  \
	$(am_test_ncm_stats_dist_kernel_OBJECTS)
test_ncm_stats_dist_kernel_DEPENDENCIES =  \
	$(top_builddir)/numcosmo/libnumcosmo.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_test_ncm_stats_vec_OBJECTS = test_ncm_stats_vec.$(OBJEXT)
test_ncm_stats_vec_OBJECTS = $(am_test_ncm_stats_vec_OBJECTS)
test_ncm_stats_vec_DEPENDENCIES =  \
	$(top_builddir)/numcosmo/libnumcosmo.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_test_ncm_vector_OBJECTS = test_ncm_vector.$(OBJEXT)
test_ncm_vector_OBJECTS = $(am_test_ncm_vector_OBJECTS)
test_ncm_vector_DEPENDENCIES =  \
	$(top_builddir)/numcosmo/libnumcosmo.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
SCRIPTS = $(installed_test_SCRIPTS) $(noinst_SCRIPTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/ncm_data_gauss_cov_test.Po \
	./$(DEPDIR)/ncm_model_test.Po ./$(DEPDIR)/test_nc_cbe.Po \
	./$(DEPDIR)/test_nc_cluster_pseudo_counts.Po \
	./$(DEPDIR)/test_nc_data_bao_dvdv.Po \
	./$(DEPDIR)/test_nc_data_bao_rdv.Po \
	./$(DEPDIR)/test_nc_distance.Po \
	./$(DEPDIR)/test_nc_galaxy_acf.Po \
	./$(DEPDIR)/test_nc_halo_density_profile.Po \
	./$(DEPDIR)/test_nc_hicosmo_de.Po \
	./$(DEPDIR)/test_nc_hiqg_1d.Po ./$(DEPDIR)/test_nc_recomb.Po \
	./$(DEPDIR)/test_nc_transfer_func.Po \
	./$(DEPDIR)/test_nc_window.Po \
	./$(DEPDIR)/test_nc_wl_surface_mass_density.Po \
	./$(DEPDIR)/test_ncm_data_gauss_cov.Po \
	./$(DEPDIR)/test_ncm_diff.Po ./$(DEPDIR)/test_ncm_fftlog.Po \
	./$(DEPDIR)/test_ncm_fit.Po ./$(DEPDIR)/test_ncm_fit_esmcmc.Po \
	./$(DEPDIR)/test_ncm_func_eval.Po \
	./$(DEPDIR)/test_ncm_integral1d.Po \
	./$(DEPDIR)/test_ncm_matrix.Po ./$(DEPDIR)/test_ncm_model.Po \
	./$(DEPDIR)/test_ncm_model_ctrl.Po \
	./$(DEPDIR)/test_ncm_mset.Po \
	./$(DEPDIR)/test_ncm_mset_catalog.Po \
	./$(DEPDIR)/test_ncm_obj_array.Po ./$(DEPDIR)/test_ncm_ode.Po \
	./$(DEPDIR)/test_ncm_serialize.Po \
	./$(DEPDIR)/test_ncm_sf_sbessel.Po \
	./$(DEPDIR)/test_ncm_sf_spherical_harmonics.Po \
	./$(DEPDIR)/test_ncm_sparam.Po \
	./$(DEPDIR)/test_ncm_sphere_map.Po \
	./$(DEPDIR)/test_ncm_spline.Po \
	./$(DEPDIR)/test_ncm_spline2d.Po \
	./$(DEPDIR)/test_ncm_stats_dist.Po \
	./$(DEPDIR)/test_ncm_stats_dist1d_epdf.Po \
	./$(DEPDIR)/test_ncm_stats_dist_kernel.Po \
	./$(DEPDIR)/test_ncm_stats_vec.Po \
	./$(DEPDIR)/test_ncm_vector.Po
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(test_nc_cbe_SOURCES) \
	$(test_nc_cluster_pseudo_counts_SOURCES) \
	$(test_nc_data_bao_dvdv_SOURCES) \
	$(test_nc_data_bao_rdv_SOURCES) $(test_nc_distance_SOURCES) \
	$(test_nc_galaxy_acf_SOURCES) \
	$(test_nc_halo_density_profile_SOURCES) \
	$(test_nc_hicosmo_de_SOURCES) $(test_nc_hiqg_1d_SOURCES) \
	$(test_nc_recomb_SOURCES) $(test_nc_transfer_func_SOURCES) \
	$(test_nc_window_SOURCES) \
	$(test_nc_wl_surface_mass_density_SOURCES) \
	$(test_ncm_data_gauss_cov_SOURCES) $(test_ncm_diff_SOURCES) \
	$(test_ncm_fftlog_SOURCES) $(test_ncm_fit_SOURCES) \
	$(test_ncm_fit_esmcmc_SOURCES) $(test_ncm_func_eval_SOURCES) \
	$(test_ncm_integral1d_SOURCES) $(test_ncm_matrix_SOURCES) \
	$(test_ncm_model_SOURCES) $(test_ncm_model_ctrl_SOURCES) \
	$(test_ncm_mset_SOURCES) $(test_ncm_mset_catalog_SOURCES) \
	$(test_ncm_obj_array_SOURCES) $(test_ncm_ode_SOURCES) \
	$(test_ncm_serialize_SOURCES) $(test_ncm_sf_sbessel_SOURCES) \
	$(test_ncm_sf_spherical_harmonics_SOURCES) \
	$(test_ncm_sparam_SOURCES) $(test_ncm_sphere_map_SOURCES) \
	$(test_ncm_spline_SOURCES) $(test_ncm_spline2d_SOURCES) \
	$(test_ncm_stats_dist_SOURCES) \
	$(test_ncm_stats_dist1d_epdf_SOURCES) \
	$(test_ncm_stats_dist_kernel_SOURCES) \
	$(test_ncm_stats_vec_SOURCES) $(test_ncm_vector_SOURCES)
DIST_SOURCES = $(test_nc_cbe_SOURCES) \
	$(test_nc_cluster_pseudo_counts_SOURCES) \
	$(test_nc_data_bao_dvdv_SOURCES) \
	$(test_nc_data_bao_rdv_SOURCES) $(test_nc_distance_SOURCES) \
	$(test_nc_galaxy_acf_SOURCES) \
	$(test_nc_halo_density_profile_SOURCES) \
	$(test_nc_hicosmo_de_SOURCES) $(test_nc_hiqg_1d_SOURCES) \
	$(test_nc_recomb_SOURCES) $(test_nc_transfer_func_SOURCES) \
	$(test_nc_window_SOURCES) \
	$(test_nc_wl_surface_mass_density_SOURCES) \
	$(test_ncm_data_gauss_cov_SOURCES) $(test_ncm_diff_SOURCES) \
	$(test_ncm_fftlog_SOURCES) $(test_ncm_fit_SOURCES) \
	$(test_ncm_fit_esmcmc_SOURCES) $(test_ncm_func_eval_SOURCES) \
	$(test_ncm_integral1d_SOURCES) $(test_ncm_matrix_SOURCES) \
	$(test_ncm_model_SOURCES) $(test_ncm_model_ctrl_SOURCES) \
	$(test_ncm_mset_SOURCES) $(test_ncm_mset_catalog_SOURCES) \
	$(test_ncm_obj_array_SOURCES) $(test_ncm_ode_SOURCES) \
	$(test_ncm_serialize_SOURCES) $(test_ncm_sf_sbessel_SOURCES) \
	$(test_ncm_sf_spherical_harmonics_SOURCES) \
	$(test_ncm_sparam_SOURCES) $(test_ncm_sphere_map_SOURCES) \
	$(test_ncm_spline_SOURCES) $(test_ncm_spline2d_SOURCES) \
	$(test_ncm_stats_dist_SOURCES) \
	$(test_ncm_stats_dist1d_epdf_SOURCES) \
	$(test_ncm_stats_dist_kernel_SOURCES) \
	$(test_ncm_stats_vec_SOURCES) $(test_ncm_vector_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(installed_test_meta_DATA) $(nobase_installed_test_DATA) \
	$(noinst_DATA)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/aminclude_static.am $(top_srcdir)/depcomp \
	$(top_srcdir)/glib-tap.mk $(top_srcdir)/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/cinthia/NumCosmo/missing aclocal-1.16
ALLOCA = 
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AUTOCONF = ${SHELL} /home/cinthia/NumCosmo/missing autoconf
AUTOHEADER = ${SHELL} /home/cinthia/NumCosmo/missing autoheader
AUTOMAKE = ${SHELL} /home/cinthia/NumCosmo/missing automake-1.16
AWK = gawk
BLAS_LIBS = -lopenblas
CC = gcc
CCDEPMODE = depmode=gcc3
CFITSIO_CFLAGS = 
CFITSIO_LIBS = -lcfitsio -lpthread
CFLAGS = -g -O2
CODE_COVERAGE_CFLAGS = 
CODE_COVERAGE_CPPFLAGS = 
CODE_COVERAGE_CXXFLAGS = 
CODE_COVERAGE_ENABLED = no
CODE_COVERAGE_LIBS = 
CPP = gcc -E
CPPFLAGS = 
CPUEXT_FLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = f77
FC = gfortran
FCFLAGS = -g -O2 -ffree-form -ffree-line-length-none -fautomatic -frecursive -Wno-unused-variable -Wno-unused-dummy-argument -Wno-unused-function -Wno-conversion -Wno-tabs
FCLIBS = -Wl,-L/usr/lib/gcc/x86_64-linux-gnu/8,-L/usr/lib/gcc/x86_64-linux-gnu/8/../../../x86_64-linux-gnu,-L/usr/lib/gcc/x86_64-linux-gnu/8/../../../../lib,-L/lib/x86_64-linux-gnu,-L/lib/../lib,-L/usr/lib/x86_64-linux-gnu,-L/usr/lib/../lib,-L.,-L/usr/lib/gcc/x86_64-linux-gnu/8/../../..,-lgfortran,-lm,-lquadmath
FFLAGS = -g -O2
FFTW3F_CFLAGS = 
FFTW3F_LIBS = -lfftw3f
FFTW3_CFLAGS = 
FFTW3_LIBS = -lfftw3
FGREP = /bin/grep -F
FLIBS = -Wl,-L/usr/lib/gcc/x86_64-linux-gnu/8,-L/usr/lib/gcc/x86_64-linux-gnu/8/../../../x86_64-linux-gnu,-L/usr/lib/gcc/x86_64-linux-gnu/8/../../../../lib,-L/lib/x86_64-linux-gnu,-L/lib/../lib,-L/usr/lib/x86_64-linux-gnu,-L/usr/lib/../lib,-L.,-L/usr/lib/gcc/x86_64-linux-gnu/8/../../..,-lgfortran,-lm,-lquadmath
GCOV = 
GENHTML = 
GFORTRAN_VERSION = 8
GLIB_CFLAGS = -pthread -I/usr/include/libmount -I/usr/include/blkid -I/usr/include/uuid -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
GLIB_LIBS = -lgthread-2.0 -pthread -lgio-2.0 -lgobject-2.0 -lglib-2.0
GLIB_MKENUMS = /usr/bin/glib-mkenums
GLIB_REQUIRED_VERSION = 2.38.0
GREP = /bin/grep
GSL_CFLAGS = 
GSL_LIBS = -lgsl  -lm
GSL_RANGE_CHECK_OFF = 
GSL_REQUIRED_VERSION = 2.0
GTKDOC_CHECK = gtkdoc-check.test
GTKDOC_CHECK_PATH = /usr/bin/gtkdoc-check
GTKDOC_DEPS_CFLAGS = -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
GTKDOC_DEPS_LIBS = -lgobject-2.0 -lglib-2.0
GTKDOC_MKPDF = /usr/bin/gtkdoc-mkpdf
GTKDOC_REBASE = /usr/bin/gtkdoc-rebase
GTK_CFLAGS = 
GTK_LIBS = 
G_DISABLE_CAST_CHECKS = 
G_IMPLEMENT_INLINES = 
H5CC = 
H5FC = 
HAVE_INLINE = 
HDF5_CC = 
HDF5_CFLAGS = 
HDF5_CPPFLAGS = 
HDF5_FC = 
HDF5_FFLAGS = 
HDF5_FLIBS = 
HDF5_LDFLAGS = 
HDF5_LIBS = 
HDF5_TYPE = neither
HDF5_VERSION = 
HTML_DIR = ${datadir}/gtk-doc/html
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTROSPECTION_CFLAGS = -pthread -I/usr/include/gobject-introspection-1.0 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
INTROSPECTION_COMPILER = /usr/bin/g-ir-compiler
INTROSPECTION_GENERATE = /usr/bin/g-ir-generate
INTROSPECTION_GIRDIR = /usr/share/gir-1.0
INTROSPECTION_LIBS = -lgirepository-1.0 -lgobject-2.0 -lglib-2.0
INTROSPECTION_MAKEFILE = /usr/share/gobject-introspection-1.0/Makefile.introspection
INTROSPECTION_SCANNER = /usr/bin/g-ir-scanner
INTROSPECTION_TYPELIBDIR = /usr/lib/x86_64-linux-gnu/girepository-1.0
LAPACK_LIBS = 
LCOV = 
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = -lm  -lopenblas -lmpfr -lgmp -lm -Wl,-L/usr/lib/gcc/x86_64-linux-gnu/8,-L/usr/lib/gcc/x86_64-linux-gnu/8/../../../x86_64-linux-gnu,-L/usr/lib/gcc/x86_64-linux-gnu/8/../../../../lib,-L/lib/x86_64-linux-gnu,-L/lib/../lib,-L/usr/lib/x86_64-linux-gnu,-L/usr/lib/../lib,-L.,-L/usr/lib/gcc/x86_64-linux-gnu/8/../../..,-lgfortran,-lm,-lquadmath 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_AGE = 1504
LT_CURRENT = 1504
LT_CURRENT_MINUS_AGE = 0
LT_RELEASE = 0.15
LT_REVISION = 0
LT_SYS_LIBRARY_PATH = 
MAINT = #
MAKEINFO = ${SHELL} /home/cinthia/NumCosmo/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
MPICC = 
MPIFC = 
NLOPT_CFLAGS = 
NLOPT_LIBS = -lnlopt -lm
NM = /usr/bin/nm -B
NMEDIT = 
NOUNDEFINED_FLAG = -no-undefined
NUMCOSMO_BINARY_AGE = 1504
NUMCOSMO_INTERFACE_AGE = 0
NUMCOSMO_MAJOR_VERSION = 0
NUMCOSMO_MICRO_VERSION = 4
NUMCOSMO_MINOR_VERSION = 15
NUMCOSMO_VERSION = 0.15.4
OBJDUMP = objdump
OBJEXT = o
OPENMP_CFLAGS = -fopenmp
OPENMP_FCFLAGS = -fopenmp
OTOOL = 
OTOOL64 = 
PACKAGE = numcosmo
PACKAGE_BUGREPORT = https://savannah.nongnu.org/bugs/?func=additem&group=numcosmo
PACKAGE_DATA_DIR = /usr/local/share/numcosmo-0.15.4
PACKAGE_NAME = numcosmo
PACKAGE_STRING = numcosmo 0.15.4
PACKAGE_TARNAME = numcosmo
PACKAGE_URL = http://www.nongnu.org/numcosmo/
PACKAGE_VERSION = 0.15.4
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PLC_DEFINES =  -DHAS_LAPACK -DLAPACK_CLIK -DNOHEALPIX -DCLIK_LENSING -DCAMSPEC_V1 -D 'CLIKSVNVERSION="0031e3604f0c"' -DHAS_RTLD_DEFAULT
PLC_NOWARN_FLAGS =  -Wno-unused-variable -Wno-unused-result -Wno-maybe-uninitialized -Wno-unused-but-set-variable
PRTDIAG = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SIMD_FLAGS = 
STRIP = strip
VALAC = valac
VAPIDIR = 
VAPIGEN = 
VERSION = 0.15.4
VISIBILITY_HIDDEN_FLAG = -fvisibility=hidden
XSLTPROC = 
abs_builddir = /home/cinthia/NumCosmo/build/tests
abs_srcdir = /home/cinthia/NumCosmo/build/../tests
abs_top_builddir = /home/cinthia/NumCosmo/build
abs_top_srcdir = /home/cinthia/NumCosmo/build/..
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
ac_ct_F77 = f77
ac_ct_FC = gfortran
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
have_cfitsio_support = #define NUMCOSMO_HAVE_CFITSIO 1
have_fftw3_support = #define NUMCOSMO_HAVE_FFTW3 1
have_fftw3f_support = #define NUMCOSMO_HAVE_FFTW3F 1
have_inline_macro = #define NCM_INLINE static inline
have_inline_support = #define NUMCOSMO_HAVE_INLINE 1
have_mpi_support = 
have_nlopt_support = #define NUMCOSMO_HAVE_NLOPT 1
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
ifGNUmake = 
ifnGNUmake = 
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/cinthia/NumCosmo/install-sh
installed_test_metadir = 
installed_testdir = 
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
numcosmo_blas_include = #include <cblas.h>
#define __MKL_CBLAS_H__
#define __GSL_CBLAS_H__

#include <numcosmo/math/ncm_gsl_blas_types.h>

oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = ../../tests
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ../..
#GITIGNOREFILES := $(GITIGNOREFILES) $(CODE_COVERAGE_OUTPUT_FILE) $(CODE_COVERAGE_OUTPUT_DIRECTORY)
#code_coverage_v_lcov_cap = $(code_coverage_v_lcov_cap_$(V))
#code_coverage_v_lcov_cap_ = $(code_coverage_v_lcov_cap_$(AM_DEFAULT_VERBOSITY))
#code_coverage_v_lcov_cap_0 = @echo "  LCOV   --capture" $(CODE_COVERAGE_OUTPUT_FILE);
#code_coverage_v_lcov_ign = $(code_coverage_v_lcov_ign_$(V))
#code_coverage_v_lcov_ign_ = $(code_coverage_v_lcov_ign_$(AM_DEFAULT_VERBOSITY))
#code_coverage_v_lcov_ign_0 = @echo "  LCOV   --remove /tmp/*" $(CODE_COVERAGE_IGNORE_PATTERN);
#code_coverage_v_genhtml = $(code_coverage_v_genhtml_$(V))
#code_coverage_v_genhtml_ = $(code_coverage_v_genhtml_$(AM_DEFAULT_VERBOSITY))
#code_coverage_v_genhtml_0 = @echo "  GEN   " "$(CODE_COVERAGE_OUTPUT_DIRECTORY)";
#code_coverage_quiet = $(code_coverage_quiet_$(V))
#code_coverage_quiet_ = $(code_coverage_quiet_$(AM_DEFAULT_VERBOSITY))
#code_coverage_quiet_0 = --quiet

# sanitizes the test-name: replaces with underscores: dashes and dots
#code_coverage_sanitize = $(subst -,_,$(subst .,_,$(1)))
#AM_DISTCHECK_CONFIGURE_FLAGS := $(AM_DISTCHECK_CONFIGURE_FLAGS) --disable-code-coverage
AM_TESTS_ENVIRONMENT = \
	G_TEST_SRCDIR="$(abs_srcdir)" 		\
	G_TEST_BUILDDIR="$(abs_builddir)" 	\
	G_DEBUG=gc-friendly 			\
	MALLOC_CHECK_=2 			\
	MALLOC_PERTURB_=$$(($${RANDOM:-256} % 256))

LOG_DRIVER = env AM_TAP_AWK='$(AWK)' $(SHELL) $(top_srcdir)/tap-driver.sh
LOG_COMPILER = $(top_srcdir)/tap-test
NULL = 

# initialize variables for unconditional += appending
BUILT_SOURCES = 
BUILT_EXTRA_DIST = 
CLEANFILES = *.log *.trs $(am__append_13)
DISTCLEANFILES = 
MAINTAINERCLEANFILES = 
EXTRA_DIST = $(all_dist_test_scripts) $(all_dist_test_data)
installed_test_LTLIBRARIES = $(am__append_12)
installed_test_SCRIPTS = $(am__append_10)
nobase_installed_test_DATA = $(am__append_11)
noinst_LTLIBRARIES = $(am__append_1)
noinst_SCRIPTS = $(am__append_3)
noinst_DATA = $(am__append_4)
check_LTLIBRARIES = $(am__append_5)
check_SCRIPTS = $(am__append_7)
check_DATA = $(am__append_8)

# Note: build even the installed-only targets during 'make check' to ensure that they still work.
# We need to do a bit of trickery here and manage disting via EXTRA_DIST instead of using dist_ prefixes to
# prevent automake from mistreating gmake functions like $(wildcard ...) and $(addprefix ...) as if they were
# filenames, including removing duplicate instances of the opening part before the space, eg. '$(addprefix'.
all_test_programs = $(test_programs) $(uninstalled_test_programs) $(installed_test_programs) \
                        $(test_extra_programs) $(uninstalled_test_extra_programs) $(installed_test_extra_programs)

all_test_scripts = $(test_scripts) $(uninstalled_test_scripts) \
	$(installed_test_scripts) $(test_extra_scripts) \
	$(uninstalled_test_extra_scripts) \
	$(installed_test_extra_scripts) $(all_dist_test_scripts)
all_dist_test_scripts = $(dist_test_scripts) $(dist_uninstalled_test_scripts) $(dist_installed_test_scripts) \
                        $(dist_test_extra_scripts) $(dist_uninstalled_test_extra_scripts) $(dist_installed_test_extra_scripts)

all_test_data = $(test_data) $(uninstalled_test_data) \
	$(installed_test_data) $(all_dist_test_data)
all_dist_test_data = $(dist_test_data) $(dist_uninstalled_test_data) $(dist_installed_test_data)
all_test_ltlibs = $(test_ltlibraries) $(uninstalled_test_ltlibraries) $(installed_test_ltlibraries)
#installed_testcases = $(test_programs) $(installed_test_programs) \
#                      $(test_scripts) $(installed_test_scripts) \
#                      $(dist_test_scripts) $(dist_installed_test_scripts)

#installed_test_meta_DATA = $(installed_testcases:=.test)

# gcov support
MY_CFLAGS = \
	 -DG_LOG_DOMAIN=\"NUMCOSMO\" \
	 $(GLIB_CFLAGS)     \
	 $(SUNDIALS_CFLAGS) \
	 $(GSL_CFLAGS)      \
	 $(FFTW3_CFLAGS)    \
	 $(CFITSIO_CFLAGS)  \
	 $(NLOPT_CFLAGS)    \
	 -I$(top_srcdir)    \
	 $(CODE_COVERAGE_CFLAGS)

AM_CFLAGS = \
	 -Wall \
	 $(MY_CFLAGS)

COVLIBS = \
	$(CODE_COVERAGE_LIBS)

test_ncm_sparam_SOURCES = \
	test_ncm_sparam.c

test_ncm_diff_SOURCES = \
	test_ncm_diff.c

test_ncm_ode_SOURCES = \
	test_ncm_ode.c

test_ncm_fftlog_SOURCES = \
	test_ncm_fftlog.c

test_ncm_vector_SOURCES = \
	test_ncm_vector.c

test_ncm_matrix_SOURCES = \
	test_ncm_matrix.c

test_ncm_stats_vec_SOURCES = \
	test_ncm_stats_vec.c

test_ncm_stats_dist1d_epdf_SOURCES = \
	test_ncm_stats_dist1d_epdf.c

test_ncm_stats_dist_SOURCES = \
	test_ncm_stats_dist.c

test_ncm_stats_dist_kernel_SOURCES = \
	test_ncm_stats_dist_kernel.c

test_ncm_spline_SOURCES = \
        test_ncm_spline.c

test_ncm_spline2d_SOURCES = \
        test_ncm_spline2d.c

test_ncm_integral1d_SOURCES = \
        test_ncm_integral1d.c

test_ncm_sf_sbessel_SOURCES = \
	test_ncm_sf_sbessel.c

test_ncm_model_SOURCES = \
        test_ncm_model.c \
	ncm_model_test.c \
	ncm_model_test.h

test_ncm_model_ctrl_SOURCES = \
        test_ncm_model_ctrl.c

test_ncm_mset_SOURCES = \
	test_ncm_mset.c

test_ncm_mset_catalog_SOURCES = \
	test_ncm_mset_catalog.c

test_ncm_obj_array_SOURCES = \
	test_ncm_obj_array.c

test_ncm_serialize_SOURCES = \
	test_ncm_serialize.c

test_ncm_data_gauss_cov_SOURCES = \
	test_ncm_data_gauss_cov.c \
	ncm_data_gauss_cov_test.c \
	ncm_data_gauss_cov_test.h

test_ncm_fit_SOURCES = \
	test_ncm_fit.c

test_ncm_fit_esmcmc_SOURCES = \
	test_ncm_fit_esmcmc.c

test_ncm_func_eval_SOURCES = \
	test_ncm_func_eval.c

test_ncm_sf_spherical_harmonics_SOURCES = \
	test_ncm_sf_spherical_harmonics.c

test_ncm_sphere_map_SOURCES = \
	test_ncm_sphere_map.c

test_nc_hicosmo_de_SOURCES = \
	test_nc_hicosmo_de.c

test_nc_window_SOURCES = \
        test_nc_window.c

test_nc_transfer_func_SOURCES = \
        test_nc_transfer_func.c        

test_nc_galaxy_acf_SOURCES = \
	test_nc_galaxy_acf.c

test_nc_recomb_SOURCES = \
	test_nc_recomb.c

test_nc_cbe_SOURCES = \
	test_nc_cbe.c

test_nc_hiqg_1d_SOURCES = \
	test_nc_hiqg_1d.c

test_nc_data_bao_rdv_SOURCES = \
        test_nc_data_bao_rdv.c

test_nc_data_bao_dvdv_SOURCES = \
        test_nc_data_bao_dvdv.c

test_nc_cluster_pseudo_counts_SOURCES = \
        test_nc_cluster_pseudo_counts.c

test_nc_halo_density_profile_SOURCES = \
        test_nc_halo_density_profile.c

test_nc_wl_surface_mass_density_SOURCES = \
        test_nc_wl_surface_mass_density.c

test_nc_distance_SOURCES = \
        test_nc_distance.c

test_programs = \
	test_ncm_vector                 \
	test_ncm_matrix                 \
	test_ncm_stats_vec              \
	test_ncm_stats_dist1d_epdf      \
	test_ncm_stats_dist             \
	test_ncm_stats_dist_kernel	\
	test_ncm_spline                 \
	test_ncm_spline2d               \
	test_ncm_integral1d             \
	test_ncm_sf_sbessel             \
	test_ncm_func_eval              \
	test_ncm_sparam                 \
	test_ncm_diff                   \
	test_ncm_ode                    \
	test_ncm_fftlog                 \
	test_ncm_model                  \
	test_ncm_model_ctrl             \
	test_ncm_serialize              \
	test_ncm_mset                   \
	test_ncm_mset_catalog           \
	test_ncm_obj_array              \
	test_ncm_data_gauss_cov         \
	test_ncm_fit                    \
	test_ncm_fit_esmcmc             \
	test_ncm_sf_spherical_harmonics \
	test_ncm_sphere_map             \
	test_nc_hiqg_1d                 \
	test_nc_hicosmo_de              \
	test_nc_window                  \
	test_nc_transfer_func           \
	test_nc_galaxy_acf              \
	test_nc_recomb                  \
	test_nc_cbe                     \
	test_nc_data_bao_rdv            \
        test_nc_data_bao_dvdv           \
        test_nc_cluster_pseudo_counts   \
        test_nc_halo_density_profile    \
        test_nc_wl_surface_mass_density \
        test_nc_distance


# TEST_PROGS += $(check_programs)
test_ncm_sparam_LDADD = \
	$(top_builddir)/numcosmo/libnumcosmo.la \
	$(GLIB_LIBS) \
	$(GSL_LIBS) \
	$(COVLIBS)

test_ncm_diff_LDADD = \
	$(top_builddir)/numcosmo/libnumcosmo.la \
	$(GLIB_LIBS) \
	$(GSL_LIBS) \
	$(COVLIBS)

test_ncm_ode_LDADD = \
	$(top_builddir)/numcosmo/libnumcosmo.la \
	$(GLIB_LIBS) \
	$(GSL_LIBS) \
	$(COVLIBS)

test_ncm_fftlog_LDADD = \
	$(top_builddir)/numcosmo/libnumcosmo.la \
	$(GLIB_LIBS) \
	$(GSL_LIBS) \
	$(COVLIBS)

test_ncm_vector_LDADD = \
	$(top_builddir)/numcosmo/libnumcosmo.la \
	$(GLIB_LIBS) \
	$(GSL_LIBS) \
	$(COVLIBS)

test_ncm_matrix_LDADD = \
	$(top_builddir)/numcosmo/libnumcosmo.la \
	$(GLIB_LIBS) \
	$(GSL_LIBS) \
	$(COVLIBS)

test_ncm_stats_vec_LDADD = \
	$(top_builddir)/numcosmo/libnumcosmo.la \
	$(GLIB_LIBS) \
	$(GSL_LIBS) \
	$(COVLIBS)

test_ncm_stats_dist1d_epdf_LDADD = \
	$(top_builddir)/numcosmo/libnumcosmo.la \
	$(GLIB_LIBS) \
	$(GSL_LIBS) \
	$(COVLIBS)

test_ncm_stats_dist_LDADD = \
	$(top_builddir)/numcosmo/libnumcosmo.la \
	$(GLIB_LIBS) \
	$(GSL_LIBS) \
	$(COVLIBS)

test_ncm_stats_dist_kernel_LDADD = \
	$(top_builddir)/numcosmo/libnumcosmo.la \
	$(GLIB_LIBS) \
	$(GSL_LIBS) \
	$(COVLIBS)

test_ncm_spline_LDADD = \
	$(top_builddir)/numcosmo/libnumcosmo.la \
	$(GLIB_LIBS) \
	$(GSL_LIBS) \
	$(COVLIBS)

test_ncm_spline2d_LDADD = \
	$(top_builddir)/numcosmo/libnumcosmo.la \
	$(GLIB_LIBS) \
	$(GSL_LIBS) \
	$(COVLIBS)

test_ncm_integral1d_LDADD = \
	$(top_builddir)/numcosmo/libnumcosmo.la \
	$(GLIB_LIBS) \
	$(GSL_LIBS) \
	$(COVLIBS)

test_ncm_sf_sbessel_LDADD = \
	$(top_builddir)/numcosmo/libnumcosmo.la \
	$(GLIB_LIBS) \
	$(GSL_LIBS) \
	$(COVLIBS)

test_ncm_model_LDADD = \
	$(top_builddir)/numcosmo/libnumcosmo.la \
	$(GLIB_LIBS) \
	$(GSL_LIBS) \
	$(COVLIBS)

test_ncm_model_ctrl_LDADD = \
	$(top_builddir)/numcosmo/libnumcosmo.la \
	$(GLIB_LIBS) \
	$(GSL_LIBS) \
	$(COVLIBS)

test_ncm_mset_LDADD = \
	$(top_builddir)/numcosmo/libnumcosmo.la \
	$(GLIB_LIBS) \
	$(GSL_LIBS) \
	$(COVLIBS)

test_ncm_mset_catalog_LDADD = \
	$(top_builddir)/numcosmo/libnumcosmo.la \
	$(GLIB_LIBS) \
	$(GSL_LIBS) \
	$(COVLIBS)

test_ncm_obj_array_LDADD = \
	$(top_builddir)/numcosmo/libnumcosmo.la \
	$(GLIB_LIBS) \
	$(GSL_LIBS) \
	$(COVLIBS)

test_ncm_serialize_LDADD = \
	$(top_builddir)/numcosmo/libnumcosmo.la \
	$(GLIB_LIBS) \
	$(GSL_LIBS) \
	$(COVLIBS)

test_ncm_data_gauss_cov_LDADD = \
	$(top_builddir)/numcosmo/libnumcosmo.la \
	$(GLIB_LIBS) \
	$(GSL_LIBS) \
	$(COVLIBS)

test_ncm_fit_LDADD = \
	$(top_builddir)/numcosmo/libnumcosmo.la \
	$(GLIB_LIBS) \
	$(GSL_LIBS) \
	$(COVLIBS)

test_ncm_fit_esmcmc_LDADD = \
	$(top_builddir)/numcosmo/libnumcosmo.la \
	$(GLIB_LIBS) \
	$(GSL_LIBS) \
	$(COVLIBS)

test_ncm_func_eval_LDADD = \
	$(top_builddir)/numcosmo/libnumcosmo.la \
	$(GLIB_LIBS) \
	$(GSL_LIBS) \
	$(COVLIBS)

test_ncm_sf_spherical_harmonics_LDADD = \
	$(top_builddir)/numcosmo/libnumcosmo.la \
	$(GLIB_LIBS) \
	$(GSL_LIBS) \
	$(COVLIBS)

test_ncm_sphere_map_LDADD = \
	$(top_builddir)/numcosmo/libnumcosmo.la \
	$(GLIB_LIBS) \
	$(GSL_LIBS) \
	$(COVLIBS)

test_nc_hicosmo_de_LDADD = \
	$(top_builddir)/numcosmo/libnumcosmo.la \
	$(GLIB_LIBS) \
	$(GSL_LIBS) \
	$(COVLIBS)

test_nc_window_LDADD = \
	$(top_builddir)/numcosmo/libnumcosmo.la \
	$(GLIB_LIBS) \
	$(GSL_LIBS) \
	$(COVLIBS)

test_nc_transfer_func_LDADD = \
	$(top_builddir)/numcosmo/libnumcosmo.la \
	$(GLIB_LIBS) \
	$(GSL_LIBS) \
	$(COVLIBS)

test_nc_galaxy_acf_LDADD = \
	$(top_builddir)/numcosmo/libnumcosmo.la \
	$(GLIB_LIBS) \
	$(GSL_LIBS) \
	$(COVLIBS)

test_nc_recomb_LDADD = \
	$(top_builddir)/numcosmo/libnumcosmo.la \
	$(GLIB_LIBS) \
	$(GSL_LIBS) \
	$(COVLIBS)

test_nc_cbe_LDADD = \
	$(top_builddir)/numcosmo/libnumcosmo.la \
	$(GLIB_LIBS) \
	$(GSL_LIBS) \
	$(COVLIBS)

test_nc_hiqg_1d_LDADD = \
	$(top_builddir)/numcosmo/libnumcosmo.la \
	$(GLIB_LIBS) \
	$(GSL_LIBS) \
	$(COVLIBS)

test_nc_data_bao_rdv_LDADD = \
	$(top_builddir)/numcosmo/libnumcosmo.la \
	$(GLIB_LIBS) \
	$(GSL_LIBS) \
	$(COVLIBS)

test_nc_data_bao_dvdv_LDADD = \
	$(top_builddir)/numcosmo/libnumcosmo.la \
	$(GLIB_LIBS) \
	$(GSL_LIBS) \
	$(COVLIBS)

test_nc_cluster_pseudo_counts_LDADD = \
	$(top_builddir)/numcosmo/libnumcosmo.la \
	$(GLIB_LIBS) \
	$(GSL_LIBS) \
	$(COVLIBS)

test_nc_halo_density_profile_LDADD = \
        $(top_builddir)/numcosmo/libnumcosmo.la \
        $(GLIB_LIBS) \
        $(GSL_LIBS) \
        $(COVLIBS)	

test_nc_wl_surface_mass_density_LDADD = \
        $(top_builddir)/numcosmo/libnumcosmo.la \
        $(GLIB_LIBS) \
        $(GSL_LIBS) \
        $(COVLIBS)

test_nc_distance_LDADD = \
        $(top_builddir)/numcosmo/libnumcosmo.la \
        $(GLIB_LIBS) \
        $(GSL_LIBS) \
        $(COVLIBS)

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(top_srcdir)/aminclude_static.am $(top_srcdir)/glib-tap.mk $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu tests/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;
$(top_srcdir)/aminclude_static.am $(top_srcdir)/glib-tap.mk $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
install-installed_testPROGRAMS: $(installed_test_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(installed_test_PROGRAMS)'; test -n "$(installed_testdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(installed_testdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(installed_testdir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(installed_testdir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(installed_testdir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-installed_testPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(installed_test_PROGRAMS)'; test -n "$(installed_testdir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(installed_testdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(installed_testdir)" && rm -f $$files

clean-installed_testPROGRAMS:
	@list='$(installed_test_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-checkLTLIBRARIES:
	-test -z "$(check_LTLIBRARIES)" || rm -f $(check_LTLIBRARIES)
	@list='$(check_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

install-installed_testLTLIBRARIES: $(installed_test_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(installed_test_LTLIBRARIES)'; test -n "$(installed_testdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(installed_testdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(installed_testdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(installed_testdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(installed_testdir)"; \
	}

uninstall-installed_testLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(installed_test_LTLIBRARIES)'; test -n "$(installed_testdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(installed_testdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(installed_testdir)/$$f"; \
	done

clean-installed_testLTLIBRARIES:
	-test -z "$(installed_test_LTLIBRARIES)" || rm -f $(installed_test_LTLIBRARIES)
	@list='$(installed_test_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

test_nc_cbe$(EXEEXT): $(test_nc_cbe_OBJECTS) $(test_nc_cbe_DEPENDENCIES) $(EXTRA_test_nc_cbe_DEPENDENCIES) 
	@rm -f test_nc_cbe$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_nc_cbe_OBJECTS) $(test_nc_cbe_LDADD) $(LIBS)

test_nc_cluster_pseudo_counts$(EXEEXT): $(test_nc_cluster_pseudo_counts_OBJECTS) $(test_nc_cluster_pseudo_counts_DEPENDENCIES) $(EXTRA_test_nc_cluster_pseudo_counts_DEPENDENCIES) 
	@rm -f test_nc_cluster_pseudo_counts$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_nc_cluster_pseudo_counts_OBJECTS) $(test_nc_cluster_pseudo_counts_LDADD) $(LIBS)

test_nc_data_bao_dvdv$(EXEEXT): $(test_nc_data_bao_dvdv_OBJECTS) $(test_nc_data_bao_dvdv_DEPENDENCIES) $(EXTRA_test_nc_data_bao_dvdv_DEPENDENCIES) 
	@rm -f test_nc_data_bao_dvdv$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_nc_data_bao_dvdv_OBJECTS) $(test_nc_data_bao_dvdv_LDADD) $(LIBS)

test_nc_data_bao_rdv$(EXEEXT): $(test_nc_data_bao_rdv_OBJECTS) $(test_nc_data_bao_rdv_DEPENDENCIES) $(EXTRA_test_nc_data_bao_rdv_DEPENDENCIES) 
	@rm -f test_nc_data_bao_rdv$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_nc_data_bao_rdv_OBJECTS) $(test_nc_data_bao_rdv_LDADD) $(LIBS)

test_nc_distance$(EXEEXT): $(test_nc_distance_OBJECTS) $(test_nc_distance_DEPENDENCIES) $(EXTRA_test_nc_distance_DEPENDENCIES) 
	@rm -f test_nc_distance$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_nc_distance_OBJECTS) $(test_nc_distance_LDADD) $(LIBS)

test_nc_galaxy_acf$(EXEEXT): $(test_nc_galaxy_acf_OBJECTS) $(test_nc_galaxy_acf_DEPENDENCIES) $(EXTRA_test_nc_galaxy_acf_DEPENDENCIES) 
	@rm -f test_nc_galaxy_acf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_nc_galaxy_acf_OBJECTS) $(test_nc_galaxy_acf_LDADD) $(LIBS)

test_nc_halo_density_profile$(EXEEXT): $(test_nc_halo_density_profile_OBJECTS) $(test_nc_halo_density_profile_DEPENDENCIES) $(EXTRA_test_nc_halo_density_profile_DEPENDENCIES) 
	@rm -f test_nc_halo_density_profile$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_nc_halo_density_profile_OBJECTS) $(test_nc_halo_density_profile_LDADD) $(LIBS)

test_nc_hicosmo_de$(EXEEXT): $(test_nc_hicosmo_de_OBJECTS) $(test_nc_hicosmo_de_DEPENDENCIES) $(EXTRA_test_nc_hicosmo_de_DEPENDENCIES) 
	@rm -f test_nc_hicosmo_de$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_nc_hicosmo_de_OBJECTS) $(test_nc_hicosmo_de_LDADD) $(LIBS)

test_nc_hiqg_1d$(EXEEXT): $(test_nc_hiqg_1d_OBJECTS) $(test_nc_hiqg_1d_DEPENDENCIES) $(EXTRA_test_nc_hiqg_1d_DEPENDENCIES) 
	@rm -f test_nc_hiqg_1d$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_nc_hiqg_1d_OBJECTS) $(test_nc_hiqg_1d_LDADD) $(LIBS)

test_nc_recomb$(EXEEXT): $(test_nc_recomb_OBJECTS) $(test_nc_recomb_DEPENDENCIES) $(EXTRA_test_nc_recomb_DEPENDENCIES) 
	@rm -f test_nc_recomb$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_nc_recomb_OBJECTS) $(test_nc_recomb_LDADD) $(LIBS)

test_nc_transfer_func$(EXEEXT): $(test_nc_transfer_func_OBJECTS) $(test_nc_transfer_func_DEPENDENCIES) $(EXTRA_test_nc_transfer_func_DEPENDENCIES) 
	@rm -f test_nc_transfer_func$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_nc_transfer_func_OBJECTS) $(test_nc_transfer_func_LDADD) $(LIBS)

test_nc_window$(EXEEXT): $(test_nc_window_OBJECTS) $(test_nc_window_DEPENDENCIES) $(EXTRA_test_nc_window_DEPENDENCIES) 
	@rm -f test_nc_window$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_nc_window_OBJECTS) $(test_nc_window_LDADD) $(LIBS)

test_nc_wl_surface_mass_density$(EXEEXT): $(test_nc_wl_surface_mass_density_OBJECTS) $(test_nc_wl_surface_mass_density_DEPENDENCIES) $(EXTRA_test_nc_wl_surface_mass_density_DEPENDENCIES) 
	@rm -f test_nc_wl_surface_mass_density$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_nc_wl_surface_mass_density_OBJECTS) $(test_nc_wl_surface_mass_density_LDADD) $(LIBS)

test_ncm_data_gauss_cov$(EXEEXT): $(test_ncm_data_gauss_cov_OBJECTS) $(test_ncm_data_gauss_cov_DEPENDENCIES) $(EXTRA_test_ncm_data_gauss_cov_DEPENDENCIES) 
	@rm -f test_ncm_data_gauss_cov$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_ncm_data_gauss_cov_OBJECTS) $(test_ncm_data_gauss_cov_LDADD) $(LIBS)

test_ncm_diff$(EXEEXT): $(test_ncm_diff_OBJECTS) $(test_ncm_diff_DEPENDENCIES) $(EXTRA_test_ncm_diff_DEPENDENCIES) 
	@rm -f test_ncm_diff$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_ncm_diff_OBJECTS) $(test_ncm_diff_LDADD) $(LIBS)

test_ncm_fftlog$(EXEEXT): $(test_ncm_fftlog_OBJECTS) $(test_ncm_fftlog_DEPENDENCIES) $(EXTRA_test_ncm_fftlog_DEPENDENCIES) 
	@rm -f test_ncm_fftlog$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_ncm_fftlog_OBJECTS) $(test_ncm_fftlog_LDADD) $(LIBS)

test_ncm_fit$(EXEEXT): $(test_ncm_fit_OBJECTS) $(test_ncm_fit_DEPENDENCIES) $(EXTRA_test_ncm_fit_DEPENDENCIES) 
	@rm -f test_ncm_fit$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_ncm_fit_OBJECTS) $(test_ncm_fit_LDADD) $(LIBS)

test_ncm_fit_esmcmc$(EXEEXT): $(test_ncm_fit_esmcmc_OBJECTS) $(test_ncm_fit_esmcmc_DEPENDENCIES) $(EXTRA_test_ncm_fit_esmcmc_DEPENDENCIES) 
	@rm -f test_ncm_fit_esmcmc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_ncm_fit_esmcmc_OBJECTS) $(test_ncm_fit_esmcmc_LDADD) $(LIBS)

test_ncm_func_eval$(EXEEXT): $(test_ncm_func_eval_OBJECTS) $(test_ncm_func_eval_DEPENDENCIES) $(EXTRA_test_ncm_func_eval_DEPENDENCIES) 
	@rm -f test_ncm_func_eval$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_ncm_func_eval_OBJECTS) $(test_ncm_func_eval_LDADD) $(LIBS)

test_ncm_integral1d$(EXEEXT): $(test_ncm_integral1d_OBJECTS) $(test_ncm_integral1d_DEPENDENCIES) $(EXTRA_test_ncm_integral1d_DEPENDENCIES) 
	@rm -f test_ncm_integral1d$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_ncm_integral1d_OBJECTS) $(test_ncm_integral1d_LDADD) $(LIBS)

test_ncm_matrix$(EXEEXT): $(test_ncm_matrix_OBJECTS) $(test_ncm_matrix_DEPENDENCIES) $(EXTRA_test_ncm_matrix_DEPENDENCIES) 
	@rm -f test_ncm_matrix$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_ncm_matrix_OBJECTS) $(test_ncm_matrix_LDADD) $(LIBS)

test_ncm_model$(EXEEXT): $(test_ncm_model_OBJECTS) $(test_ncm_model_DEPENDENCIES) $(EXTRA_test_ncm_model_DEPENDENCIES) 
	@rm -f test_ncm_model$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_ncm_model_OBJECTS) $(test_ncm_model_LDADD) $(LIBS)

test_ncm_model_ctrl$(EXEEXT): $(test_ncm_model_ctrl_OBJECTS) $(test_ncm_model_ctrl_DEPENDENCIES) $(EXTRA_test_ncm_model_ctrl_DEPENDENCIES) 
	@rm -f test_ncm_model_ctrl$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_ncm_model_ctrl_OBJECTS) $(test_ncm_model_ctrl_LDADD) $(LIBS)

test_ncm_mset$(EXEEXT): $(test_ncm_mset_OBJECTS) $(test_ncm_mset_DEPENDENCIES) $(EXTRA_test_ncm_mset_DEPENDENCIES) 
	@rm -f test_ncm_mset$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_ncm_mset_OBJECTS) $(test_ncm_mset_LDADD) $(LIBS)

test_ncm_mset_catalog$(EXEEXT): $(test_ncm_mset_catalog_OBJECTS) $(test_ncm_mset_catalog_DEPENDENCIES) $(EXTRA_test_ncm_mset_catalog_DEPENDENCIES) 
	@rm -f test_ncm_mset_catalog$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_ncm_mset_catalog_OBJECTS) $(test_ncm_mset_catalog_LDADD) $(LIBS)

test_ncm_obj_array$(EXEEXT): $(test_ncm_obj_array_OBJECTS) $(test_ncm_obj_array_DEPENDENCIES) $(EXTRA_test_ncm_obj_array_DEPENDENCIES) 
	@rm -f test_ncm_obj_array$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_ncm_obj_array_OBJECTS) $(test_ncm_obj_array_LDADD) $(LIBS)

test_ncm_ode$(EXEEXT): $(test_ncm_ode_OBJECTS) $(test_ncm_ode_DEPENDENCIES) $(EXTRA_test_ncm_ode_DEPENDENCIES) 
	@rm -f test_ncm_ode$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_ncm_ode_OBJECTS) $(test_ncm_ode_LDADD) $(LIBS)

test_ncm_serialize$(EXEEXT): $(test_ncm_serialize_OBJECTS) $(test_ncm_serialize_DEPENDENCIES) $(EXTRA_test_ncm_serialize_DEPENDENCIES) 
	@rm -f test_ncm_serialize$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_ncm_serialize_OBJECTS) $(test_ncm_serialize_LDADD) $(LIBS)

test_ncm_sf_sbessel$(EXEEXT): $(test_ncm_sf_sbessel_OBJECTS) $(test_ncm_sf_sbessel_DEPENDENCIES) $(EXTRA_test_ncm_sf_sbessel_DEPENDENCIES) 
	@rm -f test_ncm_sf_sbessel$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_ncm_sf_sbessel_OBJECTS) $(test_ncm_sf_sbessel_LDADD) $(LIBS)

test_ncm_sf_spherical_harmonics$(EXEEXT): $(test_ncm_sf_spherical_harmonics_OBJECTS) $(test_ncm_sf_spherical_harmonics_DEPENDENCIES) $(EXTRA_test_ncm_sf_spherical_harmonics_DEPENDENCIES) 
	@rm -f test_ncm_sf_spherical_harmonics$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_ncm_sf_spherical_harmonics_OBJECTS) $(test_ncm_sf_spherical_harmonics_LDADD) $(LIBS)

test_ncm_sparam$(EXEEXT): $(test_ncm_sparam_OBJECTS) $(test_ncm_sparam_DEPENDENCIES) $(EXTRA_test_ncm_sparam_DEPENDENCIES) 
	@rm -f test_ncm_sparam$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_ncm_sparam_OBJECTS) $(test_ncm_sparam_LDADD) $(LIBS)

test_ncm_sphere_map$(EXEEXT): $(test_ncm_sphere_map_OBJECTS) $(test_ncm_sphere_map_DEPENDENCIES) $(EXTRA_test_ncm_sphere_map_DEPENDENCIES) 
	@rm -f test_ncm_sphere_map$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_ncm_sphere_map_OBJECTS) $(test_ncm_sphere_map_LDADD) $(LIBS)

test_ncm_spline$(EXEEXT): $(test_ncm_spline_OBJECTS) $(test_ncm_spline_DEPENDENCIES) $(EXTRA_test_ncm_spline_DEPENDENCIES) 
	@rm -f test_ncm_spline$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_ncm_spline_OBJECTS) $(test_ncm_spline_LDADD) $(LIBS)

test_ncm_spline2d$(EXEEXT): $(test_ncm_spline2d_OBJECTS) $(test_ncm_spline2d_DEPENDENCIES) $(EXTRA_test_ncm_spline2d_DEPENDENCIES) 
	@rm -f test_ncm_spline2d$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_ncm_spline2d_OBJECTS) $(test_ncm_spline2d_LDADD) $(LIBS)

test_ncm_stats_dist$(EXEEXT): $(test_ncm_stats_dist_OBJECTS) $(test_ncm_stats_dist_DEPENDENCIES) $(EXTRA_test_ncm_stats_dist_DEPENDENCIES) 
	@rm -f test_ncm_stats_dist$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_ncm_stats_dist_OBJECTS) $(test_ncm_stats_dist_LDADD) $(LIBS)

test_ncm_stats_dist1d_epdf$(EXEEXT): $(test_ncm_stats_dist1d_epdf_OBJECTS) $(test_ncm_stats_dist1d_epdf_DEPENDENCIES) $(EXTRA_test_ncm_stats_dist1d_epdf_DEPENDENCIES) 
	@rm -f test_ncm_stats_dist1d_epdf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_ncm_stats_dist1d_epdf_OBJECTS) $(test_ncm_stats_dist1d_epdf_LDADD) $(LIBS)

test_ncm_stats_dist_kernel$(EXEEXT): $(test_ncm_stats_dist_kernel_OBJECTS) $(test_ncm_stats_dist_kernel_DEPENDENCIES) $(EXTRA_test_ncm_stats_dist_kernel_DEPENDENCIES) 
	@rm -f test_ncm_stats_dist_kernel$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_ncm_stats_dist_kernel_OBJECTS) $(test_ncm_stats_dist_kernel_LDADD) $(LIBS)

test_ncm_stats_vec$(EXEEXT): $(test_ncm_stats_vec_OBJECTS) $(test_ncm_stats_vec_DEPENDENCIES) $(EXTRA_test_ncm_stats_vec_DEPENDENCIES) 
	@rm -f test_ncm_stats_vec$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_ncm_stats_vec_OBJECTS) $(test_ncm_stats_vec_LDADD) $(LIBS)

test_ncm_vector$(EXEEXT): $(test_ncm_vector_OBJECTS) $(test_ncm_vector_DEPENDENCIES) $(EXTRA_test_ncm_vector_DEPENDENCIES) 
	@rm -f test_ncm_vector$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_ncm_vector_OBJECTS) $(test_ncm_vector_LDADD) $(LIBS)
install-installed_testSCRIPTS: $(installed_test_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(installed_test_SCRIPTS)'; test -n "$(installed_testdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(installed_testdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(installed_testdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(installed_testdir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(installed_testdir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-installed_testSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(installed_test_SCRIPTS)'; test -n "$(installed_testdir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(installed_testdir)'; $(am__uninstall_files_from_dir)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/ncm_data_gauss_cov_test.Po # am--include-marker
include ./$(DEPDIR)/ncm_model_test.Po # am--include-marker
include ./$(DEPDIR)/test_nc_cbe.Po # am--include-marker
include ./$(DEPDIR)/test_nc_cluster_pseudo_counts.Po # am--include-marker
include ./$(DEPDIR)/test_nc_data_bao_dvdv.Po # am--include-marker
include ./$(DEPDIR)/test_nc_data_bao_rdv.Po # am--include-marker
include ./$(DEPDIR)/test_nc_distance.Po # am--include-marker
include ./$(DEPDIR)/test_nc_galaxy_acf.Po # am--include-marker
include ./$(DEPDIR)/test_nc_halo_density_profile.Po # am--include-marker
include ./$(DEPDIR)/test_nc_hicosmo_de.Po # am--include-marker
include ./$(DEPDIR)/test_nc_hiqg_1d.Po # am--include-marker
include ./$(DEPDIR)/test_nc_recomb.Po # am--include-marker
include ./$(DEPDIR)/test_nc_transfer_func.Po # am--include-marker
include ./$(DEPDIR)/test_nc_window.Po # am--include-marker
include ./$(DEPDIR)/test_nc_wl_surface_mass_density.Po # am--include-marker
include ./$(DEPDIR)/test_ncm_data_gauss_cov.Po # am--include-marker
include ./$(DEPDIR)/test_ncm_diff.Po # am--include-marker
include ./$(DEPDIR)/test_ncm_fftlog.Po # am--include-marker
include ./$(DEPDIR)/test_ncm_fit.Po # am--include-marker
include ./$(DEPDIR)/test_ncm_fit_esmcmc.Po # am--include-marker
include ./$(DEPDIR)/test_ncm_func_eval.Po # am--include-marker
include ./$(DEPDIR)/test_ncm_integral1d.Po # am--include-marker
include ./$(DEPDIR)/test_ncm_matrix.Po # am--include-marker
include ./$(DEPDIR)/test_ncm_model.Po # am--include-marker
include ./$(DEPDIR)/test_ncm_model_ctrl.Po # am--include-marker
include ./$(DEPDIR)/test_ncm_mset.Po # am--include-marker
include ./$(DEPDIR)/test_ncm_mset_catalog.Po # am--include-marker
include ./$(DEPDIR)/test_ncm_obj_array.Po # am--include-marker
include ./$(DEPDIR)/test_ncm_ode.Po # am--include-marker
include ./$(DEPDIR)/test_ncm_serialize.Po # am--include-marker
include ./$(DEPDIR)/test_ncm_sf_sbessel.Po # am--include-marker
include ./$(DEPDIR)/test_ncm_sf_spherical_harmonics.Po # am--include-marker
include ./$(DEPDIR)/test_ncm_sparam.Po # am--include-marker
include ./$(DEPDIR)/test_ncm_sphere_map.Po # am--include-marker
include ./$(DEPDIR)/test_ncm_spline.Po # am--include-marker
include ./$(DEPDIR)/test_ncm_spline2d.Po # am--include-marker
include ./$(DEPDIR)/test_ncm_stats_dist.Po # am--include-marker
include ./$(DEPDIR)/test_ncm_stats_dist1d_epdf.Po # am--include-marker
include ./$(DEPDIR)/test_ncm_stats_dist_kernel.Po # am--include-marker
include ./$(DEPDIR)/test_ncm_stats_vec.Po # am--include-marker
include ./$(DEPDIR)/test_ncm_vector.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-installed_test_metaDATA: $(installed_test_meta_DATA)
	@$(NORMAL_INSTALL)
	@list='$(installed_test_meta_DATA)'; test -n "$(installed_test_metadir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(installed_test_metadir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(installed_test_metadir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(installed_test_metadir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(installed_test_metadir)" || exit $$?; \
	done

uninstall-installed_test_metaDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(installed_test_meta_DATA)'; test -n "$(installed_test_metadir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(installed_test_metadir)'; $(am__uninstall_files_from_dir)
install-nobase_installed_testDATA: $(nobase_installed_test_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nobase_installed_test_DATA)'; test -n "$(installed_testdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(installed_testdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(installed_testdir)" || exit 1; \
	fi; \
	$(am__nobase_list) | while read dir files; do \
	  xfiles=; for file in $$files; do \
	    if test -f "$$file"; then xfiles="$$xfiles $$file"; \
	    else xfiles="$$xfiles $(srcdir)/$$file"; fi; done; \
	  test -z "$$xfiles" || { \
	    test "x$$dir" = x. || { \
	      echo " $(MKDIR_P) '$(DESTDIR)$(installed_testdir)/$$dir'"; \
	      $(MKDIR_P) "$(DESTDIR)$(installed_testdir)/$$dir"; }; \
	    echo " $(INSTALL_DATA) $$xfiles '$(DESTDIR)$(installed_testdir)/$$dir'"; \
	    $(INSTALL_DATA) $$xfiles "$(DESTDIR)$(installed_testdir)/$$dir" || exit $$?; }; \
	done

uninstall-nobase_installed_testDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_installed_test_DATA)'; test -n "$(installed_testdir)" || list=; \
	$(am__nobase_strip_setup); files=`$(am__nobase_strip)`; \
	dir='$(DESTDIR)$(installed_testdir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS: $(check_PROGRAMS) $(check_LTLIBRARIES) $(check_SCRIPTS) $(check_DATA)
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS) $(check_LTLIBRARIES) $(check_SCRIPTS) $(check_DATA)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
test_ncm_vector.log: test_ncm_vector$(EXEEXT)
	@p='test_ncm_vector$(EXEEXT)'; \
	b='test_ncm_vector'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_ncm_matrix.log: test_ncm_matrix$(EXEEXT)
	@p='test_ncm_matrix$(EXEEXT)'; \
	b='test_ncm_matrix'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_ncm_stats_vec.log: test_ncm_stats_vec$(EXEEXT)
	@p='test_ncm_stats_vec$(EXEEXT)'; \
	b='test_ncm_stats_vec'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_ncm_stats_dist1d_epdf.log: test_ncm_stats_dist1d_epdf$(EXEEXT)
	@p='test_ncm_stats_dist1d_epdf$(EXEEXT)'; \
	b='test_ncm_stats_dist1d_epdf'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_ncm_stats_dist.log: test_ncm_stats_dist$(EXEEXT)
	@p='test_ncm_stats_dist$(EXEEXT)'; \
	b='test_ncm_stats_dist'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_ncm_stats_dist_kernel.log: test_ncm_stats_dist_kernel$(EXEEXT)
	@p='test_ncm_stats_dist_kernel$(EXEEXT)'; \
	b='test_ncm_stats_dist_kernel'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_ncm_spline.log: test_ncm_spline$(EXEEXT)
	@p='test_ncm_spline$(EXEEXT)'; \
	b='test_ncm_spline'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_ncm_spline2d.log: test_ncm_spline2d$(EXEEXT)
	@p='test_ncm_spline2d$(EXEEXT)'; \
	b='test_ncm_spline2d'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_ncm_integral1d.log: test_ncm_integral1d$(EXEEXT)
	@p='test_ncm_integral1d$(EXEEXT)'; \
	b='test_ncm_integral1d'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_ncm_sf_sbessel.log: test_ncm_sf_sbessel$(EXEEXT)
	@p='test_ncm_sf_sbessel$(EXEEXT)'; \
	b='test_ncm_sf_sbessel'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_ncm_func_eval.log: test_ncm_func_eval$(EXEEXT)
	@p='test_ncm_func_eval$(EXEEXT)'; \
	b='test_ncm_func_eval'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_ncm_sparam.log: test_ncm_sparam$(EXEEXT)
	@p='test_ncm_sparam$(EXEEXT)'; \
	b='test_ncm_sparam'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_ncm_diff.log: test_ncm_diff$(EXEEXT)
	@p='test_ncm_diff$(EXEEXT)'; \
	b='test_ncm_diff'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_ncm_ode.log: test_ncm_ode$(EXEEXT)
	@p='test_ncm_ode$(EXEEXT)'; \
	b='test_ncm_ode'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_ncm_fftlog.log: test_ncm_fftlog$(EXEEXT)
	@p='test_ncm_fftlog$(EXEEXT)'; \
	b='test_ncm_fftlog'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_ncm_model.log: test_ncm_model$(EXEEXT)
	@p='test_ncm_model$(EXEEXT)'; \
	b='test_ncm_model'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_ncm_model_ctrl.log: test_ncm_model_ctrl$(EXEEXT)
	@p='test_ncm_model_ctrl$(EXEEXT)'; \
	b='test_ncm_model_ctrl'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_ncm_serialize.log: test_ncm_serialize$(EXEEXT)
	@p='test_ncm_serialize$(EXEEXT)'; \
	b='test_ncm_serialize'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_ncm_mset.log: test_ncm_mset$(EXEEXT)
	@p='test_ncm_mset$(EXEEXT)'; \
	b='test_ncm_mset'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_ncm_mset_catalog.log: test_ncm_mset_catalog$(EXEEXT)
	@p='test_ncm_mset_catalog$(EXEEXT)'; \
	b='test_ncm_mset_catalog'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_ncm_obj_array.log: test_ncm_obj_array$(EXEEXT)
	@p='test_ncm_obj_array$(EXEEXT)'; \
	b='test_ncm_obj_array'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_ncm_data_gauss_cov.log: test_ncm_data_gauss_cov$(EXEEXT)
	@p='test_ncm_data_gauss_cov$(EXEEXT)'; \
	b='test_ncm_data_gauss_cov'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_ncm_fit.log: test_ncm_fit$(EXEEXT)
	@p='test_ncm_fit$(EXEEXT)'; \
	b='test_ncm_fit'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_ncm_fit_esmcmc.log: test_ncm_fit_esmcmc$(EXEEXT)
	@p='test_ncm_fit_esmcmc$(EXEEXT)'; \
	b='test_ncm_fit_esmcmc'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_ncm_sf_spherical_harmonics.log: test_ncm_sf_spherical_harmonics$(EXEEXT)
	@p='test_ncm_sf_spherical_harmonics$(EXEEXT)'; \
	b='test_ncm_sf_spherical_harmonics'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_ncm_sphere_map.log: test_ncm_sphere_map$(EXEEXT)
	@p='test_ncm_sphere_map$(EXEEXT)'; \
	b='test_ncm_sphere_map'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_nc_hiqg_1d.log: test_nc_hiqg_1d$(EXEEXT)
	@p='test_nc_hiqg_1d$(EXEEXT)'; \
	b='test_nc_hiqg_1d'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_nc_hicosmo_de.log: test_nc_hicosmo_de$(EXEEXT)
	@p='test_nc_hicosmo_de$(EXEEXT)'; \
	b='test_nc_hicosmo_de'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_nc_window.log: test_nc_window$(EXEEXT)
	@p='test_nc_window$(EXEEXT)'; \
	b='test_nc_window'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_nc_transfer_func.log: test_nc_transfer_func$(EXEEXT)
	@p='test_nc_transfer_func$(EXEEXT)'; \
	b='test_nc_transfer_func'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_nc_galaxy_acf.log: test_nc_galaxy_acf$(EXEEXT)
	@p='test_nc_galaxy_acf$(EXEEXT)'; \
	b='test_nc_galaxy_acf'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_nc_recomb.log: test_nc_recomb$(EXEEXT)
	@p='test_nc_recomb$(EXEEXT)'; \
	b='test_nc_recomb'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_nc_cbe.log: test_nc_cbe$(EXEEXT)
	@p='test_nc_cbe$(EXEEXT)'; \
	b='test_nc_cbe'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_nc_data_bao_rdv.log: test_nc_data_bao_rdv$(EXEEXT)
	@p='test_nc_data_bao_rdv$(EXEEXT)'; \
	b='test_nc_data_bao_rdv'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_nc_data_bao_dvdv.log: test_nc_data_bao_dvdv$(EXEEXT)
	@p='test_nc_data_bao_dvdv$(EXEEXT)'; \
	b='test_nc_data_bao_dvdv'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_nc_cluster_pseudo_counts.log: test_nc_cluster_pseudo_counts$(EXEEXT)
	@p='test_nc_cluster_pseudo_counts$(EXEEXT)'; \
	b='test_nc_cluster_pseudo_counts'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_nc_halo_density_profile.log: test_nc_halo_density_profile$(EXEEXT)
	@p='test_nc_halo_density_profile$(EXEEXT)'; \
	b='test_nc_halo_density_profile'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_nc_wl_surface_mass_density.log: test_nc_wl_surface_mass_density$(EXEEXT)
	@p='test_nc_wl_surface_mass_density$(EXEEXT)'; \
	b='test_nc_wl_surface_mass_density'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_nc_distance.log: test_nc_distance$(EXEEXT)
	@p='test_nc_distance$(EXEEXT)'; \
	b='test_nc_distance'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS) $(check_LTLIBRARIES) \
	  $(check_SCRIPTS) $(check_DATA)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(PROGRAMS) $(LTLIBRARIES) $(SCRIPTS) $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(installed_testdir)" "$(DESTDIR)$(installed_testdir)" "$(DESTDIR)$(installed_testdir)" "$(DESTDIR)$(installed_test_metadir)" "$(DESTDIR)$(installed_testdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-checkLTLIBRARIES clean-checkPROGRAMS clean-generic \
	clean-installed_testLTLIBRARIES clean-installed_testPROGRAMS \
	clean-libtool clean-noinstLTLIBRARIES clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/ncm_data_gauss_cov_test.Po
	-rm -f ./$(DEPDIR)/ncm_model_test.Po
	-rm -f ./$(DEPDIR)/test_nc_cbe.Po
	-rm -f ./$(DEPDIR)/test_nc_cluster_pseudo_counts.Po
	-rm -f ./$(DEPDIR)/test_nc_data_bao_dvdv.Po
	-rm -f ./$(DEPDIR)/test_nc_data_bao_rdv.Po
	-rm -f ./$(DEPDIR)/test_nc_distance.Po
	-rm -f ./$(DEPDIR)/test_nc_galaxy_acf.Po
	-rm -f ./$(DEPDIR)/test_nc_halo_density_profile.Po
	-rm -f ./$(DEPDIR)/test_nc_hicosmo_de.Po
	-rm -f ./$(DEPDIR)/test_nc_hiqg_1d.Po
	-rm -f ./$(DEPDIR)/test_nc_recomb.Po
	-rm -f ./$(DEPDIR)/test_nc_transfer_func.Po
	-rm -f ./$(DEPDIR)/test_nc_window.Po
	-rm -f ./$(DEPDIR)/test_nc_wl_surface_mass_density.Po
	-rm -f ./$(DEPDIR)/test_ncm_data_gauss_cov.Po
	-rm -f ./$(DEPDIR)/test_ncm_diff.Po
	-rm -f ./$(DEPDIR)/test_ncm_fftlog.Po
	-rm -f ./$(DEPDIR)/test_ncm_fit.Po
	-rm -f ./$(DEPDIR)/test_ncm_fit_esmcmc.Po
	-rm -f ./$(DEPDIR)/test_ncm_func_eval.Po
	-rm -f ./$(DEPDIR)/test_ncm_integral1d.Po
	-rm -f ./$(DEPDIR)/test_ncm_matrix.Po
	-rm -f ./$(DEPDIR)/test_ncm_model.Po
	-rm -f ./$(DEPDIR)/test_ncm_model_ctrl.Po
	-rm -f ./$(DEPDIR)/test_ncm_mset.Po
	-rm -f ./$(DEPDIR)/test_ncm_mset_catalog.Po
	-rm -f ./$(DEPDIR)/test_ncm_obj_array.Po
	-rm -f ./$(DEPDIR)/test_ncm_ode.Po
	-rm -f ./$(DEPDIR)/test_ncm_serialize.Po
	-rm -f ./$(DEPDIR)/test_ncm_sf_sbessel.Po
	-rm -f ./$(DEPDIR)/test_ncm_sf_spherical_harmonics.Po
	-rm -f ./$(DEPDIR)/test_ncm_sparam.Po
	-rm -f ./$(DEPDIR)/test_ncm_sphere_map.Po
	-rm -f ./$(DEPDIR)/test_ncm_spline.Po
	-rm -f ./$(DEPDIR)/test_ncm_spline2d.Po
	-rm -f ./$(DEPDIR)/test_ncm_stats_dist.Po
	-rm -f ./$(DEPDIR)/test_ncm_stats_dist1d_epdf.Po
	-rm -f ./$(DEPDIR)/test_ncm_stats_dist_kernel.Po
	-rm -f ./$(DEPDIR)/test_ncm_stats_vec.Po
	-rm -f ./$(DEPDIR)/test_ncm_vector.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-installed_testLTLIBRARIES \
	install-installed_testPROGRAMS install-installed_testSCRIPTS \
	install-installed_test_metaDATA \
	install-nobase_installed_testDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/ncm_data_gauss_cov_test.Po
	-rm -f ./$(DEPDIR)/ncm_model_test.Po
	-rm -f ./$(DEPDIR)/test_nc_cbe.Po
	-rm -f ./$(DEPDIR)/test_nc_cluster_pseudo_counts.Po
	-rm -f ./$(DEPDIR)/test_nc_data_bao_dvdv.Po
	-rm -f ./$(DEPDIR)/test_nc_data_bao_rdv.Po
	-rm -f ./$(DEPDIR)/test_nc_distance.Po
	-rm -f ./$(DEPDIR)/test_nc_galaxy_acf.Po
	-rm -f ./$(DEPDIR)/test_nc_halo_density_profile.Po
	-rm -f ./$(DEPDIR)/test_nc_hicosmo_de.Po
	-rm -f ./$(DEPDIR)/test_nc_hiqg_1d.Po
	-rm -f ./$(DEPDIR)/test_nc_recomb.Po
	-rm -f ./$(DEPDIR)/test_nc_transfer_func.Po
	-rm -f ./$(DEPDIR)/test_nc_window.Po
	-rm -f ./$(DEPDIR)/test_nc_wl_surface_mass_density.Po
	-rm -f ./$(DEPDIR)/test_ncm_data_gauss_cov.Po
	-rm -f ./$(DEPDIR)/test_ncm_diff.Po
	-rm -f ./$(DEPDIR)/test_ncm_fftlog.Po
	-rm -f ./$(DEPDIR)/test_ncm_fit.Po
	-rm -f ./$(DEPDIR)/test_ncm_fit_esmcmc.Po
	-rm -f ./$(DEPDIR)/test_ncm_func_eval.Po
	-rm -f ./$(DEPDIR)/test_ncm_integral1d.Po
	-rm -f ./$(DEPDIR)/test_ncm_matrix.Po
	-rm -f ./$(DEPDIR)/test_ncm_model.Po
	-rm -f ./$(DEPDIR)/test_ncm_model_ctrl.Po
	-rm -f ./$(DEPDIR)/test_ncm_mset.Po
	-rm -f ./$(DEPDIR)/test_ncm_mset_catalog.Po
	-rm -f ./$(DEPDIR)/test_ncm_obj_array.Po
	-rm -f ./$(DEPDIR)/test_ncm_ode.Po
	-rm -f ./$(DEPDIR)/test_ncm_serialize.Po
	-rm -f ./$(DEPDIR)/test_ncm_sf_sbessel.Po
	-rm -f ./$(DEPDIR)/test_ncm_sf_spherical_harmonics.Po
	-rm -f ./$(DEPDIR)/test_ncm_sparam.Po
	-rm -f ./$(DEPDIR)/test_ncm_sphere_map.Po
	-rm -f ./$(DEPDIR)/test_ncm_spline.Po
	-rm -f ./$(DEPDIR)/test_ncm_spline2d.Po
	-rm -f ./$(DEPDIR)/test_ncm_stats_dist.Po
	-rm -f ./$(DEPDIR)/test_ncm_stats_dist1d_epdf.Po
	-rm -f ./$(DEPDIR)/test_ncm_stats_dist_kernel.Po
	-rm -f ./$(DEPDIR)/test_ncm_stats_vec.Po
	-rm -f ./$(DEPDIR)/test_ncm_vector.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-installed_testLTLIBRARIES \
	uninstall-installed_testPROGRAMS \
	uninstall-installed_testSCRIPTS \
	uninstall-installed_test_metaDATA \
	uninstall-nobase_installed_testDATA

.MAKE: all check check-am install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-TESTS \
	check-am clean clean-checkLTLIBRARIES clean-checkPROGRAMS \
	clean-generic clean-installed_testLTLIBRARIES \
	clean-installed_testPROGRAMS clean-libtool \
	clean-noinstLTLIBRARIES clean-noinstPROGRAMS cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-installed_testLTLIBRARIES \
	install-installed_testPROGRAMS install-installed_testSCRIPTS \
	install-installed_test_metaDATA install-man \
	install-nobase_installed_testDATA install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am \
	uninstall-installed_testLTLIBRARIES \
	uninstall-installed_testPROGRAMS \
	uninstall-installed_testSCRIPTS \
	uninstall-installed_test_metaDATA \
	uninstall-nobase_installed_testDATA

.PRECIOUS: Makefile


# Code coverage
#
# Optional:
#  - CODE_COVERAGE_DIRECTORY: Top-level directory for code coverage reporting.
#    Multiple directories may be specified, separated by whitespace.
#    (Default: $(top_builddir))
#  - CODE_COVERAGE_OUTPUT_FILE: Filename and path for the .info file generated
#    by lcov for code coverage. (Default:
#    $(PACKAGE_NAME)-$(PACKAGE_VERSION)-coverage.info)
#  - CODE_COVERAGE_OUTPUT_DIRECTORY: Directory for generated code coverage
#    reports to be created. (Default:
#    $(PACKAGE_NAME)-$(PACKAGE_VERSION)-coverage)
#  - CODE_COVERAGE_BRANCH_COVERAGE: Set to 1 to enforce branch coverage,
#    set to 0 to disable it and leave empty to stay with the default.
#    (Default: empty)
#  - CODE_COVERAGE_LCOV_SHOPTS_DEFAULT: Extra options shared between both lcov
#    instances. (Default: based on )
#  - CODE_COVERAGE_LCOV_SHOPTS: Extra options to shared between both lcov
#    instances. (Default: )
#  - CODE_COVERAGE_LCOV_OPTIONS_GCOVPATH: --gcov-tool pathtogcov
#  - CODE_COVERAGE_LCOV_OPTIONS_DEFAULT: Extra options to pass to the
#    collecting lcov instance. (Default: )
#  - CODE_COVERAGE_LCOV_OPTIONS: Extra options to pass to the collecting lcov
#    instance. (Default: )
#  - CODE_COVERAGE_LCOV_RMOPTS_DEFAULT: Extra options to pass to the filtering
#    lcov instance. (Default: empty)
#  - CODE_COVERAGE_LCOV_RMOPTS: Extra options to pass to the filtering lcov
#    instance. (Default: )
#  - CODE_COVERAGE_GENHTML_OPTIONS_DEFAULT: Extra options to pass to the
#    genhtml instance. (Default: based on )
#  - CODE_COVERAGE_GENHTML_OPTIONS: Extra options to pass to the genhtml
#    instance. (Default: )
#  - CODE_COVERAGE_IGNORE_PATTERN: Extra glob pattern of files to ignore
#
# The generated report will be titled using the $(PACKAGE_NAME) and
# $(PACKAGE_VERSION). In order to add the current git hash to the title,
# use the git-version-gen script, available online.
# Optional variables
# run only on top dir
# ifeq ($(abs_builddir), $(abs_top_builddir))
#CODE_COVERAGE_DIRECTORY ?= $(top_builddir)
#CODE_COVERAGE_OUTPUT_FILE ?= $(PACKAGE_NAME)-$(PACKAGE_VERSION)-coverage.info
#CODE_COVERAGE_OUTPUT_DIRECTORY ?= $(PACKAGE_NAME)-$(PACKAGE_VERSION)-coverage

#CODE_COVERAGE_BRANCH_COVERAGE ?=
#CODE_COVERAGE_LCOV_SHOPTS_DEFAULT ?= $(if $(CODE_COVERAGE_BRANCH_COVERAGE),--rc lcov_branch_coverage=$(CODE_COVERAGE_BRANCH_COVERAGE))
#CODE_COVERAGE_LCOV_SHOPTS ?= $(CODE_COVERAGE_LCOV_SHOPTS_DEFAULT)
#CODE_COVERAGE_LCOV_OPTIONS_GCOVPATH ?= --gcov-tool "$(GCOV)"
#CODE_COVERAGE_LCOV_OPTIONS_DEFAULT ?= $(CODE_COVERAGE_LCOV_OPTIONS_GCOVPATH)
#CODE_COVERAGE_LCOV_OPTIONS ?= $(CODE_COVERAGE_LCOV_OPTIONS_DEFAULT)
#CODE_COVERAGE_LCOV_RMOPTS_DEFAULT ?=
#CODE_COVERAGE_LCOV_RMOPTS ?= $(CODE_COVERAGE_LCOV_RMOPTS_DEFAULT)
#CODE_COVERAGE_GENHTML_OPTIONS_DEFAULT ?=$(if $(CODE_COVERAGE_BRANCH_COVERAGE),--rc genhtml_branch_coverage=$(CODE_COVERAGE_BRANCH_COVERAGE))
#CODE_COVERAGE_GENHTML_OPTIONS ?= $(CODE_COVERAGE_GENHTML_OPTIONS_DEFAULT)
#CODE_COVERAGE_IGNORE_PATTERN ?=

# Use recursive makes in order to ignore errors during check
#check-code-coverage:
#	-$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -k check
#	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) code-coverage-capture

# Capture code coverage data
#code-coverage-capture: code-coverage-capture-hook
#	$(code_coverage_v_lcov_cap)$(LCOV) $(code_coverage_quiet) $(addprefix --directory ,$(CODE_COVERAGE_DIRECTORY)) --capture --output-file "$(CODE_COVERAGE_OUTPUT_FILE).tmp" --test-name "$(call code_coverage_sanitize,$(PACKAGE_NAME)-$(PACKAGE_VERSION))" --no-checksum --compat-libtool $(CODE_COVERAGE_LCOV_SHOPTS) $(CODE_COVERAGE_LCOV_OPTIONS)
#	$(code_coverage_v_lcov_ign)$(LCOV) $(code_coverage_quiet) $(addprefix --directory ,$(CODE_COVERAGE_DIRECTORY)) --remove "$(CODE_COVERAGE_OUTPUT_FILE).tmp" "/tmp/*" $(CODE_COVERAGE_IGNORE_PATTERN) --output-file "$(CODE_COVERAGE_OUTPUT_FILE)" $(CODE_COVERAGE_LCOV_SHOPTS) $(CODE_COVERAGE_LCOV_RMOPTS)
#	-@rm -f "$(CODE_COVERAGE_OUTPUT_FILE).tmp"
#	$(code_coverage_v_genhtml)LANG=C $(GENHTML) $(code_coverage_quiet) $(addprefix --prefix ,$(CODE_COVERAGE_DIRECTORY)) --output-directory "$(CODE_COVERAGE_OUTPUT_DIRECTORY)" --title "$(PACKAGE_NAME)-$(PACKAGE_VERSION) Code Coverage" --legend --show-details "$(CODE_COVERAGE_OUTPUT_FILE)" $(CODE_COVERAGE_GENHTML_OPTIONS)
#	@echo "file://$(abs_builddir)/$(CODE_COVERAGE_OUTPUT_DIRECTORY)/index.html"

#code-coverage-clean:
#	-$(LCOV) --directory $(top_builddir) -z
#	-rm -rf "$(CODE_COVERAGE_OUTPUT_FILE)" "$(CODE_COVERAGE_OUTPUT_FILE).tmp" "$(CODE_COVERAGE_OUTPUT_DIRECTORY)"
#	-find . \( -name "*.gcda" -o -name "*.gcno" -o -name "*.gcov" \) -delete

#code-coverage-dist-clean:
# else # ifneq ($(abs_builddir), $(abs_top_builddir))
#check-code-coverage:

#code-coverage-capture: code-coverage-capture-hook

#code-coverage-clean:

#code-coverage-dist-clean:
# endif # ifeq ($(abs_builddir), $(abs_top_builddir))
# Use recursive makes in order to ignore errors during check
check-code-coverage:
	@echo "Need to reconfigure with --enable-code-coverage"
# Capture code coverage data
code-coverage-capture: code-coverage-capture-hook
	@echo "Need to reconfigure with --enable-code-coverage"

code-coverage-clean:

code-coverage-dist-clean:

# Hook rule executed before code-coverage-capture, overridable by the user
code-coverage-capture-hook:

.PHONY: check-code-coverage code-coverage-capture code-coverage-dist-clean code-coverage-clean code-coverage-capture-hook

#%.test: %$(EXEEXT) Makefile
#	$(AM_V_GEN) ($(MKDIR_P) $(@D); \
#	echo '[Test]' > $@.tmp; \
#	echo 'Type=session' >> $@.tmp; \
#	echo 'Exec=$(installed_testdir)/$(notdir $<) --tap' >> $@.tmp; \
#	echo 'Output=TAP' >> $@.tmp; \
#	mv $@.tmp $@)

#TESTS = $(check_programs)
#export VERBOSE = 1

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
