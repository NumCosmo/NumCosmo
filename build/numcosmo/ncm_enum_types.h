
/* This file is generated by glib-mkenums, do not modify it. This code is licensed under the same license as the containing project. Note that it links to GLib, so must comply with the LGPL linking clauses. */

#ifndef __NCM_ENUM_TYPES_H__
#define __NCM_ENUM_TYPES_H__

#include <glib-object.h>

G_BEGIN_DECLS

/* enumerations from "math/grid_one.h" */
GType ncm_grid_nodes_end_points_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_GRID_NODES_END_POINTS (ncm_grid_nodes_end_points_get_type ())

/* enumerations from "math/ncm_csq1d.h" */
GType ncm_cs_q1_devol_state_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_CS_Q1_DEVOL_STATE (ncm_cs_q1_devol_state_get_type ())

/* enumerations from "math/ncm_data_poisson.h" */
GType ncm_data_poisson_type_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_DATA_POISSON_TYPE (ncm_data_poisson_type_get_type ())

/* enumerations from "math/ncm_dataset.h" */
GType ncm_dataset_bstrap_type_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_DATASET_BSTRAP_TYPE (ncm_dataset_bstrap_type_get_type ())

/* enumerations from "math/ncm_fit.h" */
GType ncm_fit_type_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_FIT_TYPE (ncm_fit_type_get_type ())
GType ncm_fit_grad_type_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_FIT_GRAD_TYPE (ncm_fit_grad_type_get_type ())
GType ncm_fit_run_msgs_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_FIT_RUN_MSGS (ncm_fit_run_msgs_get_type ())

/* enumerations from "math/ncm_fit_esmcmc_walker_apes.h" */
GType ncm_fit_esmcmc_walker_apes_method_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_FIT_ESMCMC_WALKER_APES_METHOD (ncm_fit_esmcmc_walker_apes_method_get_type ())
GType ncm_fit_esmcmc_walker_apes_ktype_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_FIT_ESMCMC_WALKER_APES_KTYPE (ncm_fit_esmcmc_walker_apes_ktype_get_type ())

/* enumerations from "math/ncm_fit_gsl_mm.h" */
GType ncm_fit_gslmm_algos_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_FIT_GSLMM_ALGOS (ncm_fit_gslmm_algos_get_type ())

/* enumerations from "math/ncm_fit_gsl_mms.h" */
GType ncm_fit_gslmms_algos_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_FIT_GSLMMS_ALGOS (ncm_fit_gslmms_algos_get_type ())

/* enumerations from "math/ncm_fit_levmar.h" */
GType ncm_fit_levmar_algos_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_FIT_LEVMAR_ALGOS (ncm_fit_levmar_algos_get_type ())

/* enumerations from "math/ncm_fit_mc.h" */
GType ncm_fit_mc_resample_type_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_FIT_MC_RESAMPLE_TYPE (ncm_fit_mc_resample_type_get_type ())

/* enumerations from "math/ncm_function_cache.h" */
GType ncm_function_cache_search_type_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_FUNCTION_CACHE_SEARCH_TYPE (ncm_function_cache_search_type_get_type ())

/* enumerations from "math/ncm_hoaa.h" */
GType ncm_hoaa_opt_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_HOAA_OPT (ncm_hoaa_opt_get_type ())
GType ncm_hoaa_sing_type_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_HOAA_SING_TYPE (ncm_hoaa_sing_type_get_type ())
GType ncm_hoaa_var_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_HOAA_VAR (ncm_hoaa_var_get_type ())

/* enumerations from "math/ncm_lh_ratio1d.h" */
GType ncm_lh_ratio1d_root_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_LH_RATIO1D_ROOT (ncm_lh_ratio1d_root_get_type ())

/* enumerations from "math/ncm_lh_ratio2d.h" */
GType ncm_lh_ratio2d_root_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_LH_RATIO2D_ROOT (ncm_lh_ratio2d_root_get_type ())

/* enumerations from "math/ncm_matrix.h" */
GType ncm_matrix_internal_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_MATRIX_INTERNAL (ncm_matrix_internal_get_type ())

/* enumerations from "math/ncm_model_funnel.h" */
GType ncm_model_funnel_sparams_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_MODEL_FUNNEL_SPARAMS (ncm_model_funnel_sparams_get_type ())
GType ncm_model_funnel_vparams_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_MODEL_FUNNEL_VPARAMS (ncm_model_funnel_vparams_get_type ())

/* enumerations from "math/ncm_model_mvnd.h" */
GType ncm_model_mvndv_params_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_MODEL_MVNDV_PARAMS (ncm_model_mvndv_params_get_type ())

/* enumerations from "math/ncm_model_rosenbrock.h" */
GType ncm_model_rosenbrock_sparams_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_MODEL_ROSENBROCK_SPARAMS (ncm_model_rosenbrock_sparams_get_type ())

/* enumerations from "math/ncm_mpi_job.h" */
GType ncm_mpi_job_ctrl_msg_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_MPI_JOB_CTRL_MSG (ncm_mpi_job_ctrl_msg_get_type ())
GType ncm_mpi_job_ctrl_tag_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_MPI_JOB_CTRL_TAG (ncm_mpi_job_ctrl_tag_get_type ())

/* enumerations from "math/ncm_mset_catalog.h" */
GType ncm_mset_catalog_sync_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_MSET_CATALOG_SYNC (ncm_mset_catalog_sync_get_type ())
GType ncm_mset_catalog_trim_type_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_MSET_CATALOG_TRIM_TYPE (ncm_mset_catalog_trim_type_get_type ())
GType ncm_mset_catalog_post_norm_method_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_MSET_CATALOG_POST_NORM_METHOD (ncm_mset_catalog_post_norm_method_get_type ())
GType ncm_mset_catalog_tau_method_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_MSET_CATALOG_TAU_METHOD (ncm_mset_catalog_tau_method_get_type ())

/* enumerations from "math/ncm_mset_trans_kern_cat.h" */
GType ncm_mset_trans_kern_cat_sampling_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_MSET_TRANS_KERN_CAT_SAMPLING (ncm_mset_trans_kern_cat_sampling_get_type ())

/* enumerations from "math/ncm_nnls.h" */
GType ncm_nnls_umethod_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_NNLS_UMETHOD (ncm_nnls_umethod_get_type ())

/* enumerations from "math/ncm_ode_eval.h" */
GType ncm_ode_eval_return_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_ODE_EVAL_RETURN (ncm_ode_eval_return_get_type ())

/* enumerations from "math/ncm_powspec_filter.h" */
GType ncm_powspec_filter_type_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_POWSPEC_FILTER_TYPE (ncm_powspec_filter_type_get_type ())

/* enumerations from "math/ncm_serialize.h" */
GType ncm_serialize_opt_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_SERIALIZE_OPT (ncm_serialize_opt_get_type ())

/* enumerations from "math/ncm_sparam.h" */
GType ncm_param_type_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_PARAM_TYPE (ncm_param_type_get_type ())

/* enumerations from "math/ncm_sphere_map.h" */
GType ncm_sphere_map_order_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_SPHERE_MAP_ORDER (ncm_sphere_map_order_get_type ())
GType ncm_sphere_map_coord_sys_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_SPHERE_MAP_COORD_SYS (ncm_sphere_map_coord_sys_get_type ())

/* enumerations from "math/ncm_spline_func.h" */
GType ncm_spline_func_type_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_SPLINE_FUNC_TYPE (ncm_spline_func_type_get_type ())

/* enumerations from "math/ncm_spline_func_test.h" */
GType ncm_spline_func_test_type_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_SPLINE_FUNC_TEST_TYPE (ncm_spline_func_test_type_get_type ())
GType ncm_spline_func_test_type_pdf_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_SPLINE_FUNC_TEST_TYPE_PDF (ncm_spline_func_test_type_pdf_get_type ())

/* enumerations from "math/ncm_spline_gsl.h" */
GType ncm_spline_gsl_type_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_SPLINE_GSL_TYPE (ncm_spline_gsl_type_get_type ())

/* enumerations from "math/ncm_spline_rbf.h" */
GType ncm_spline_rbf_type_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_SPLINE_RBF_TYPE (ncm_spline_rbf_type_get_type ())

/* enumerations from "math/ncm_stats_dist.h" */
GType ncm_stats_dist_cv_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_STATS_DIST_CV (ncm_stats_dist_cv_get_type ())

/* enumerations from "math/ncm_stats_dist1d_epdf.h" */
GType ncm_stats_dist1d_epdf_bw_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_STATS_DIST1D_EPDF_BW (ncm_stats_dist1d_epdf_bw_get_type ())

/* enumerations from "math/ncm_stats_vec.h" */
GType ncm_stats_vec_type_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_STATS_VEC_TYPE (ncm_stats_vec_type_get_type ())
GType ncm_stats_vec_ar_type_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_STATS_VEC_AR_TYPE (ncm_stats_vec_ar_type_get_type ())

/* enumerations from "math/ncm_vector.h" */
GType ncm_vector_internal_get_type (void) G_GNUC_CONST;
#define NCM_TYPE_VECTOR_INTERNAL (ncm_vector_internal_get_type ())
G_END_DECLS

#endif /* __NCM_ENUM_TYPES_H__ */

/* Generated data ends here */

